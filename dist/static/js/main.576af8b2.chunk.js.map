{"version":3,"sources":["components/common/CommonFooter.jsx","components/utility/LoginForm.jsx","components/utility/RegisterForm.jsx","util/helper.js","util/request.js","util/session.js","components/pages/PageLanding.jsx","components/utility/Logout.jsx","components/utility/FilterModal.jsx","components/utility/SearchBar.jsx","components/common/CommonNavbar.jsx","components/common/CommonPost.jsx","components/utility/RedirectIfNeeded.jsx","util/providerFunctions.js","components/pages/PageFeed.jsx","components/pages/PageProfile.jsx","components/pages/PageProfileProvider.jsx","components/common/JustUserPicture.jsx","components/utility/ProviderPreference.jsx","components/pages/PageSettings.jsx","components/utility/FAQ_Question.jsx","components/pages/PageFAQ.jsx","components/pages/PageSetup.jsx","components/utility/Auth.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["CommonFooter","props","state","showFAQ","Fragment","className","this","fixed","sticky","href","to","Button","variant","size","Component","LoginForm","username","password","id","Form","Group","controlId","Control","type","placeholder","onChange","e","setState","target","value","onClick","onSubmit","RegisterForm","email","confirmPassword","passwordClass","onPasswordChange","left","right","endsWith","startsWith","substring","routes","API_URL","API_URL2","API_PROVIDER","API_POST","API_USER","API_PREFERENCES","get","path","data","axios","helper","params","post","put","delete","get2","headers","method","url","get3","post2","qs","stringify","post2json","delete2","put2","getUrl","postUrl","putUrl","cookies","Cookies","session","ready","loaded","userId","token","avatar","bio","onUpdate","initSession","a","request","API_USER_GET_BY_ID","res","avatarUrl","console","error","load","login","user","pass","log","API_USER_LOGIN","user_id","set","Promise","resolve","logout","API_USER_LOGOUT","remove","register","API_USER_REGISTER","passwordHash","authHeaders","isReady","isLoaded","setUpdate","handler","PageLanding","item","isLogin","alert","handleWeakRegex","test","handleMediumRegex","handleStrongRegex","handlePassword","handleMailRegex","mail","handleUsernameRegex","handleOnLoginSubmit","forceUpdate","Alert","setTimeout","handleOnRegisterSubmit","handlePasswordChange","name","componentDidMount","handleShowLogin","newItem","handleShowRegister","src","alt","width","height","block","Logout","NavDropdown","Item","window","location","FilterModal","show","filter","date","ascendant","handleModalClose","handleModalOpen","handleFormDateRadioChange","event","pos","lastIndexOf","substr","onDateChange","parseInt","handleFromOrderRadioChange","order","onOrderChange","handleFilter","onFilter","handleApplyFilters","Modal","onHide","Header","closeButton","Title","Body","ListGroup","Check","label","checked","Footer","SearchBar","handleSearchChange","handleSearchKeyPress","handleSearch","onSearchChange","CommonNavbar","Navbar","bg","expand","Brand","authenticated","withSearch","Nav","title","Collapse","CommonPost","handleMonth","month","toLowerCase","handleDate","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","newDateList","split","replace","Math","abs","join","provider","fake","thumbnail","description","toString","RedirectIfNeeded","includes","prov_id","PageFeed","posts","postsLoading","postIndex","loadingPosts","search","loadPosts","addEventListener","listenToScroll","shouldRedirect","scrollHeight","scrollTop","clientHeight","count","body","skip","length","query","API_POST_GET_INTERVAL","then","concat","map","p","utils","score","postDate","catch","err","API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS","uid","redirectComponent","handleDateChange","handleOrderChange","removeEventListener","key","PageProfile","PageProfileProvider","providerReady","providerValid","API_PROVIDER_BY_ID","provider_id","match","providerId","API_POST_GET_INTERVAL_BY_PROVIDER","JustUserPicture","ProviderPreference","PageSettings","useState","list","setProvider","setQuery","searchQuery","setSearchQuery","index","pagination","setPagination","setAlert","sessionInterval","React","updateState","useCallback","showModal","setShowModal","imageUrl","setImageUrl","passwordUser","setPasswordUser","confirmPasswordUser","setConfirmPasswordUser","Bio","setBio","initialized","setInitialized","useEffect","updateProviderCount","setInterval","clearInterval","updateProviders","API_PROVIDER_SEARCH","API_PROVIDER_GET_INTERVAL","min","i","push","updateProviderChecked","API_PROVIDER_SEARCH_COUNT","API_PROVIDER_COUNT","providerCount","ceil","providerElem","API_PREFERENCES_GET","trim","handlePaginationFactory","handleImageChange","API_USER_UPDATE","handleBioChange","Tabs","defaultActiveKey","onSelect","Tab","eventKey","onKeyPress","preventDefault","as","rows","Pagination","First","Prev","Ellipsis","disabled","active","max","Next","Last","API_PREFERENCES_UPDATE","status","document","documentElement","FAQ_Question","Card","Accordion","Toggle","question","answer","PageFAQ","questions","PageSetup","handleSaveSettings","Auth","children","App","ex","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","domain","clientId","redirectUri","origin","audience","scope","getElementById"],"mappings":"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","file":"static/js/main.576af8b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport '../../style/style.scss';\r\n\r\nclass CommonFooter extends Component {\r\n    state = { showFAQ: true };\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state.showFAQ = props.showFAQ ?? true;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n            <footer className={this.props.fixed ? \"footer-fixed\" : (this.props.sticky ? \"footer-sticky\" : \"\")}>\r\n                <div className=\"footer-container\">\r\n                    <div>\r\n                        Contact:\r\n                        <a className=\"footer-contact-label\" href=\"https://github.com/orgs/Fake-News-Detection-2B5/teams/front-end\">\r\n                            Our Github\r\n                        </a>\r\n                    </div>\r\n                    {\r\n                        this.state.showFAQ ? \r\n                        <LinkContainer to=\"/faq\">\r\n                            <Button variant=\"primary\" size=\"sm\">\r\n                                FAQ\r\n                            </Button>\r\n                        </LinkContainer>\r\n                        :\r\n                        <LinkContainer to=\"/\">\r\n                            <Button variant=\"primary\" size=\"sm\">\r\n                                Home\r\n                            </Button>\r\n                        </LinkContainer>\r\n                    }\r\n                </div>\r\n            </footer>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default CommonFooter;","import React, { Component } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport \"../../style/navbar.scss\";\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <panel-content>\r\n          <div id=\"fullview\">\r\n            <panel-content>\r\n              <phantom-div />\r\n              <Form.Group controlId=\"formEmail\" id=\"inputfullwidth\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter username\"\r\n                  onChange={(e) => {\r\n                    this.setState({username: e.target.value});\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formPassword\" id=\"inputfullwidth\">\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => {\r\n                  this.setState({password: e.target.value});\r\n              }}/>\r\n              </Form.Group>\r\n              <phantom-div />\r\n              <Button\r\n                variant=\"primary\"\r\n                id=\"fixed-button\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                    this.props.onSubmit(this.state.username, this.state.password);\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </panel-content>\r\n          </div>\r\n        </panel-content>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport \"../../style/navbar.scss\";\r\n\r\nclass RegisterForm extends Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    passwordClass: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"fullview\">\r\n          <panel-content>\r\n            <Form.Group controlId=\"formUsernameRegister\" id=\"inputfullwidth\">\r\n              <Form.Control\r\n                type=\"username\"\r\n                placeholder=\"Enter username\"\r\n                onChange={(e) => {\r\n                  this.setState({ username: e.target.value });\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formEmailRegister\" id=\"inputfullwidth\">\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={(e) => {\r\n                  this.setState({ email: e.target.value });\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPasswordRegister\" id=\"inputfullwidth\">\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className={this.state.passwordClass}\r\n                onChange={(e) => {\r\n                  this.setState({\r\n                    password: e.target.value,\r\n                    passwordClass: this.props.onPasswordChange(e.target.value),\r\n                  });\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPasswordConfirm\" id=\"inputfullwidth\">\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                onChange={(e) => {\r\n                  this.setState({ confirmPassword: e.target.value });\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              id=\"fixed-button\"\r\n              variant=\"primary\"\r\n              size=\"lg\"\r\n              onClick={() => {\r\n                this.props.onSubmit(\r\n                  this.state.username,\r\n                  this.state.email,\r\n                  this.state.password,\r\n                  this.state.confirmPassword\r\n                );\r\n              }}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </panel-content>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","export default {\r\n    pathJoin: (left, right) => {\r\n        if(left.endsWith('/')) {\r\n            if(right.startsWith('/')) {\r\n                return left + right.substring(1);\r\n            } else {\r\n                return left + right;\r\n            }\r\n        } else {\r\n            if(right.startsWith('/')) {\r\n                return left + right;\r\n            } else {\r\n                return left + '/' + right;\r\n            }\r\n        }\r\n    }\r\n}","import axios from 'axios';\r\nimport qs from \"qs\";\r\nimport helper from './helper.js';\r\n\r\nconst routes = {\r\n    API_URL: 'https://fake-news-zuul-gateway.herokuapp.com/fake-database',\r\n    API_URL2: 'https://fake-database-fe-support.herokuapp.com'\r\n};\r\n\r\nroutes['API_PROVIDER'] = '/provider';\r\nroutes['API_PROVIDER_BY_ID'] = `${routes.API_PROVIDER}/getById`;\r\nroutes['API_PROVIDER_COUNT'] = `${routes.API_PROVIDER}/getCount`;\r\nroutes['API_PROVIDER_GET_INTERVAL'] = `${routes.API_PROVIDER}/getInterval`;\r\nroutes['API_PROVIDER_SEARCH_COUNT'] = `${routes.API_PROVIDER}/searchCount`;\r\nroutes['API_PROVIDER_SEARCH'] = `${routes.API_PROVIDER}/search`;\r\nroutes['API_PROVIDER_GET_BY_NAME'] = `${routes.API_PROVIDER}/getByName`;\r\n\r\nroutes['API_POST'] = '/post';\r\nroutes['API_POST_GET_INTERVAL'] = `${routes.API_POST}/getInterval`;\r\nroutes['API_POST_GET_INTERVAL_BY_PROVIDER'] = `${routes.API_POST}/getIntervalByProvider`;\r\n\r\nroutes['API_USER'] = '/user';\r\nroutes['API_USER_LOGIN'] = `${routes.API_USER}/login`\r\nroutes['API_USER_LOGOUT'] = `${routes.API_USER}/logout`\r\nroutes['API_USER_REGISTER'] = `${routes.API_USER}/register`;\r\nroutes['API_USER_GET_BY_ID'] = `${routes.API_USER}/get`;\r\nroutes['API_USER_UPDATE'] = `${routes.API_USER}/update`;\r\n\r\nroutes['API_PREFERENCES'] = '/preferences';\r\nroutes['API_PREFERENCES_GET'] = `${routes.API_PREFERENCES}/isSubscribed`;\r\nroutes['API_PREFERENCES_UPDATE'] = `${routes.API_PREFERENCES}/updateSubscriptionStatus`;\r\nroutes['API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS'] = `${routes.API_PREFERENCES}/getByUserId`;\r\n\r\nexport default {\r\n    routes: routes,\r\n    get: (path, data) => {\r\n        return axios.get(helper.pathJoin(routes.API_URL, path), { params: data });\r\n    },\r\n    post: (path, data) => {\r\n        return axios.post(helper.pathJoin(routes.API_URL, path), data);\r\n    },\r\n    put: (path, data) => {\r\n        return axios.put(helper.pathJoin(routes.API_URL, path), data);\r\n    },\r\n    delete: (path, data) => {\r\n        return axios.delete(helper.pathJoin(routes.API_URL, path), data);\r\n    },\r\n    get2: (path, data, headers) => {\r\n        return axios({\r\n            method: \"get\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            params: data,\r\n            headers: headers ?? {}\r\n        });\r\n    },\r\n    get3: (path, data, headers) => {\r\n        return axios({\r\n            method: \"get\",\r\n            url: helper.pathJoin(routes.API_URL, path),\r\n            params: data,\r\n            headers: headers ?? {}\r\n        });\r\n    },\r\n    post2: (path, data, headers) => {\r\n        return axios({\r\n            method: \"post\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            data: qs.stringify(data),\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded',\r\n                ...headers\r\n            }\r\n        })\r\n    },\r\n    post2json: (path, data, headers) => {\r\n        return axios({\r\n            method: \"post\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            data: data,\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                ...headers\r\n            }\r\n        })\r\n    },\r\n    delete2: (path, data, headers) => {\r\n        return axios({\r\n            method: \"delete\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            data: data,\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded',\r\n                ...headers\r\n            }\r\n        })\r\n    },\r\n    put2: (path, data, headers) => {\r\n        return axios({\r\n            method: \"put\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            data: qs.stringify(data),\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded',\r\n                ...headers\r\n            }\r\n        })\r\n        //return axios.put(fullPath, data);\r\n    },\r\n    getUrl: (url, data) => {\r\n        return axios.get(url, { params: data });\r\n    },\r\n    postUrl: (url, data) => {\r\n        return axios.post(url, data);\r\n    },\r\n    putUrl: (url, data) => {\r\n        return axios.put(url, data);\r\n    }\r\n};","import request from \"./request.js\"\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nvar session = {\r\n    ready: false,\r\n    loaded: false,\r\n\r\n    data: {\r\n        userId: null,\r\n        token: null,\r\n        username: null,\r\n        avatar: null,\r\n        bio: null,\r\n        email: null\r\n    },\r\n\r\n    onUpdate: null,\r\n\r\n    headers: () => ({\r\n        \"X-Auth-User\": session.data.userId,\r\n        \"X-Auth-Token\": session.data.token\r\n    })\r\n};\r\n\r\nasync function initSession() {\r\n    if(!session.ready) {\r\n        try {\r\n            let res = await request.get2(request.routes.API_USER_GET_BY_ID, {\r\n                id: session.data.userId\r\n            }, session.headers());\r\n\r\n            session.data.username = res.data.username;\r\n            session.data.avatar = res.data.avatarUrl;\r\n            session.data.bio = res.data.bio;\r\n            session.data.email = res.data.email;\r\n\r\n            session.ready = true;\r\n        } catch(err) {\r\n            console.error(err);\r\n            session.ready = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    load: async () => {\r\n        session.data.userId = cookies.get(\"user_id\", { path: \"/\" });\r\n        session.data.token = cookies.get(\"token\", { path: \"/\" });\r\n\r\n        try {\r\n            session.data.userId = cookies.get(\"user_id\", { path: \"/\" });\r\n            session.data.token = cookies.get(\"token\", { path: \"/\" });\r\n\r\n            if(session.data.userId && session.data.token)\r\n                await initSession();\r\n\r\n            session.loaded = true;\r\n        } catch(ex) {\r\n            session.loaded = true;\r\n        }\r\n    },\r\n    login: async (user, pass) => {\r\n        try {\r\n            console.log({\r\n                username: user,\r\n                password: pass\r\n            });\r\n            let res = await request.post2(request.routes.API_USER_LOGIN, {\r\n                username: user,\r\n                password: pass\r\n            });\r\n            \r\n            session.data.userId = res.data.user_id;\r\n            session.data.token = res.data.token;\r\n\r\n            cookies.set(\"user_id\", session.data.userId, { path: \"/\" });\r\n            cookies.set(\"token\", session.data.token, { path: \"/\" });\r\n\r\n            await initSession();\r\n\r\n            return Promise.resolve(true);\r\n        } catch(err) {\r\n            console.error(err);\r\n\r\n            return Promise.resolve(false);\r\n        };\r\n    },\r\n    logout: async () => {\r\n        try {\r\n            let res = await request.delete2(request.routes.API_USER_LOGOUT, { }, session.headers());\r\n\r\n            cookies.remove(\"user_id\", { path: \"/\" });\r\n            cookies.remove(\"token\", { path: \"/\" });\r\n\r\n            session.ready = false;\r\n\r\n            return Promise.resolve(true);\r\n        } catch(err) {\r\n            console.error(err);\r\n            return Promise.resolve(false);\r\n        };\r\n    },\r\n    register: async (username, email, pass) => {\r\n        try {\r\n            let res = await request.post2json(request.routes.API_USER_REGISTER, {\r\n                username: username,\r\n                passwordHash: pass,\r\n                avatarUrl: \"https://t4.ftcdn.net/jpg/03/46/93/61/360_F_346936114_RaxE6OQogebgAWTalE1myseY1Hbb5qPM.jpg\",\r\n                bio: \"I am \" + username + \" and this is my bio. Change me!\",\r\n                email: email\r\n            });\r\n            \r\n            // session.data.userId = res.data.user_id;\r\n            // session.data.token = res.data.token;\r\n\r\n            // cookies.set(\"user_id\", session.data.userId, { path: \"/\" });\r\n            // cookies.set(\"token\", session.data.token, { path: \"/\" });\r\n            return Promise.resolve(res.data === true);\r\n        } catch(err) {\r\n            console.error(err);\r\n            return Promise.resolve(false);\r\n        };\r\n    },\r\n    authHeaders: () => session.headers(),\r\n    isReady: () => session.ready,\r\n    isLoaded: () => session.loaded,\r\n    onUpdate: () => session.onUpdate(),\r\n    setUpdate: (handler) => session.onUpdate = handler,\r\n    get: () => session.data\r\n}","import React, { Component } from \"react\";\r\nimport { Alert, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport \"../../style/style.scss\";\r\n\r\nimport LoginForm from \"../utility/LoginForm.jsx\";\r\nimport RegisterForm from \"../utility/RegisterForm.jsx\";\r\n\r\nimport session from \"../../util/session\";\r\n\r\nclass PageLanding extends Component {\r\n  state = {\r\n    item: null,\r\n    isLogin: true,\r\n    alert: null,\r\n  };\r\n\r\n  handleWeakRegex = (pass) => {\r\n    const weakRegex = /^(?=.*[A-Za-z])(?=.*[0-9])[A-Za-z0-9]{8,32}$/g;\r\n    // string must containt at least one digit and alphabetical letter with the a minimum length of 8 and a maximum length of 32\r\n\r\n    if (!weakRegex.test(pass)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleMediumRegex = (pass) => {\r\n    const mediumRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[A-Za-z0-9]{8,32}$/g;\r\n    // string must containt at least one digit, one lowercase alphabetical letter and one uppercase alphabetical letter with the a minimum length of 8 and a maximum length of 32\r\n\r\n    if (!mediumRegex.test(pass)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  handleStrongRegex = (pass) => {\r\n    const strongRegex =\r\n      /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}<.>/?~])[A-Za-z0-9!@#$%^&*()\\-_=+\\[\\]{}<.>/?~]{8,32}$/g;\r\n    // string must containt one digit, one lowercase alphabetical letter, one uppercase alphabetical letter and one of the specified special characters with the a minimum length of 8 and a maximum length of 32\r\n\r\n    if (!strongRegex.test(pass)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  handlePassword = (pass) => {\r\n    if (!this.handleStrongRegex(pass)) {\r\n      if (!this.handleMediumRegex(pass)) {\r\n        if (!this.handleWeakRegex(pass)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  handleMailRegex = (mail) => {\r\n    const mailRegex =\r\n      /(?:(?:\\r\\n)?[ \\t])*(?:(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)*\\<(?:(?:\\r\\n)?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*(?:,@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*)*:(?:(?:\\r\\n)?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*\\>(?:(?:\\r\\n)?[ \\t])*)|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)*:(?:(?:\\r\\n)?[ \\t])*(?:(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)*\\<(?:(?:\\r\\n)?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*(?:,@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*)*:(?:(?:\\r\\n)?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*\\>(?:(?:\\r\\n)?[ \\t])*)(?:,\\s*(?:(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*|(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)*\\<(?:(?:\\r\\n)?[ \\t])*(?:@(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*(?:,@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*)*:(?:(?:\\r\\n)?[ \\t])*)?(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\"(?:[^\\\"\\r\\\\]|\\\\.|(?:(?:\\r\\n)?[ \\t]))*\"(?:(?:\\r\\n)?[ \\t])*))*@(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*)(?:\\.(?:(?:\\r\\n)?[ \\t])*(?:[^()<>@,;:\\\\\".\\[\\] \\000-\\031]+(?:(?:(?:\\r\\n)?[ \\t])+|\\Z|(?=[\\[\"()<>@,;:\\\\\".\\[\\]]))|\\[([^\\[\\]\\r\\\\]|\\\\.)*\\](?:(?:\\r\\n)?[ \\t])*))*\\>(?:(?:\\r\\n)?[ \\t])*))*)?;\\s*)/g;\r\n    // this is the RFC882 Mail Adress Regex\r\n    if (!mailRegex.test(mail)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  handleUsernameRegex = (username) => {\r\n    const usernameRegex =\r\n      /^(?=[a-zA-Z0-9._]{6,32}$)(?!.*[_.]{2})[^_.].*[^_.]$/g;\r\n    /*\r\n      1. Constains only alphanumeric characters, underscore and dot\r\n      2. Underscore and dot cannot be at either the start or end of a username (e.g. .username, _username, username., username_)\r\n      3. Underscore and dot cannnot be next to each other (e.g. user._name, use_.rname)\r\n      4. Underscore or dot cannot be userd multiple times in a row (e.g. user__name, user..name)\r\n      5. Number of characters must be between 6 and 32\r\n    */\r\n\r\n    if (!usernameRegex.test(username)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  handleOnLoginSubmit = async (username, password) => {\r\n    if (await session.login(username, password)) {\r\n      this.setState();\r\n      this.forceUpdate();\r\n    } else {\r\n      this.setState({\r\n        alert: (\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n            Incorrect username or password!\r\n          </Alert>\r\n        ),\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          alert: null,\r\n        });\r\n      }, 4000);\r\n    }\r\n  };\r\n\r\n  handleOnRegisterSubmit = async (\r\n    username,\r\n    email,\r\n    password,\r\n    confirmPassword\r\n  ) => {\r\n    if (!this.handleUsernameRegex(username)) {\r\n      this.setState({\r\n        alert: (\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n            Username is invalid or shorter than 6 characters!\r\n          </Alert>\r\n        ),\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          alert: null,\r\n        });\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    if (!this.handleMailRegex(email)) {\r\n      this.setState({\r\n        alert: (\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n            Invalid email!\r\n          </Alert>\r\n        ),\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          alert: null,\r\n        });\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    if (!this.handlePassword(password)) {\r\n      this.setState({\r\n        alert: (\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n            Password is invalid or shorter than 8 characters!\r\n          </Alert>\r\n        ),\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          alert: null,\r\n        });\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      this.setState({\r\n        alert: (\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n            Passwords do not match!\r\n          </Alert>\r\n        ),\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          alert: null,\r\n        });\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    if (await session.register(username, email, password)) {\r\n      this.setState({\r\n        item: <LoginForm onSubmit={this.handleOnLoginSubmit} />,\r\n      });\r\n      this.setState({\r\n        alert: (\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"success\"}>\r\n            Registered successfully! You can now log in.\r\n          </Alert>\r\n        ),\r\n        isLogin: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          alert: null,\r\n        });\r\n      }, 3000);\r\n      this.forceUpdate();\r\n    } else {\r\n      this.setState({\r\n        alert: (\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n            Username or email already in use!\r\n          </Alert>\r\n        ),\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          alert: null,\r\n        });\r\n      }, 4000);\r\n    }\r\n  };\r\n\r\n  handlePasswordChange = (value) => {\r\n    let name = \"register-password-\";\r\n    if (this.handleStrongRegex(value)) return name + \"strong\";\r\n    else if (this.handleMediumRegex(value)) return name + \"medium\";\r\n    else if (this.handleWeakRegex(value)) return name + \"weak\";\r\n    return name + \"invalid\";\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ item: <LoginForm onSubmit={this.handleOnLoginSubmit} /> });\r\n  };\r\n\r\n  handleShowLogin = () => {\r\n    const newItem = <LoginForm onSubmit={this.handleOnLoginSubmit} />;\r\n    this.setState({ item: newItem, isLogin: true });\r\n  };\r\n\r\n  handleShowRegister = () => {\r\n    const newItem = (\r\n      <RegisterForm\r\n        onPasswordChange={this.handlePasswordChange}\r\n        onSubmit={this.handleOnRegisterSubmit}\r\n      />\r\n    );\r\n    this.setState({ item: newItem, isLogin: false });\r\n  };\r\n\r\n  render() {\r\n    if (!session.isLoaded()) return \"\";\r\n\r\n    if (session.isReady()) return <Redirect to=\"/feed\" />;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <grid-template>\r\n          <grid-logo>\r\n            <LinkContainer to=\"/\">\r\n              <img\r\n                id=\"faq-logo\"\r\n                className=\"rounded-img\"\r\n                src={process.env.PUBLIC_URL + \"/res/img/logo512.png\"}\r\n                alt=\"brand logo\"\r\n                width=\"90px\"\r\n                height=\"90px\"\r\n              />\r\n            </LinkContainer>\r\n          </grid-logo>\r\n          <grid-welcome>\r\n            <h1>Welcome to Fake News Detector!</h1>\r\n          </grid-welcome>\r\n          <grid-image>\r\n            <img\r\n              src={\"../../../res/img/landingpage.svg\"}\r\n              alt=\"React Logo\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n            />\r\n          </grid-image>\r\n          <panel>\r\n            <panelGrid>\r\n              <btn-login>\r\n                <Button\r\n                  id=\"button-radius-left\"\r\n                  onClick={this.handleShowLogin}\r\n                  type=\"button\"\r\n                  variant={this.state.isLogin ? \"success\" : \"secondary\"}\r\n                  size=\"lg\"\r\n                  block\r\n                >\r\n                  Login\r\n                </Button>\r\n              </btn-login>\r\n              <btn-register>\r\n                <Button\r\n                  id=\"button-radius-right\"\r\n                  onClick={this.handleShowRegister}\r\n                  type=\"button\"\r\n                  variant={this.state.isLogin ? \"secondary\" : \"success\"}\r\n                  size=\"lg\"\r\n                  block\r\n                >\r\n                  Register\r\n                </Button>\r\n              </btn-register>\r\n              <panel-content-wrapper>{this.state.item}</panel-content-wrapper>\r\n            </panelGrid>\r\n          </panel>\r\n          <alertMessage>{this.state.alert}</alertMessage>\r\n        </grid-template>\r\n        <CommonFooter fixed />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageLanding;\r\n","import React , { Component } from \"react\";\r\nimport { NavDropdown } from \"react-bootstrap\";\r\nimport session from \"../../util/session\";\r\n\r\nclass Logout extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      session.isReady() && (\r\n        <NavDropdown.Item\r\n          onClick={async () => {\r\n            if(await session.logout()) {\r\n              window.location = \"/\";\r\n            }\r\n            else {\r\n              alert(\"Error at logout\");\r\n            }\r\n          }}\r\n        >\r\n          Logout\r\n        </NavDropdown.Item>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport { Modal, Form, ListGroup, Button } from \"react-bootstrap\";\r\n\r\n\r\n\r\nclass FilterModal extends Component {\r\n    state = {\r\n        show: false,\r\n        filter: {\r\n            date: 0,\r\n            ascendant: false\r\n        }\r\n    };\r\n\r\n    handleModalClose = () => {\r\n        this.setState({ show: false });\r\n    }\r\n\r\n    handleModalOpen = () => {\r\n        this.setState({show: true});\r\n    }\r\n\r\n    handleFormDateRadioChange = (event) => {\r\n        //console.log(event.target.id); \r\n        let pos = event.target.id.lastIndexOf(\"-\");\r\n        //console.log(event.target.id.substr(pos+1,1));\r\n        let id = event.target.id.substr(pos+1,1);\r\n        let ascendant = this.state.filter.ascendant;\r\n\r\n        let date;\r\n\r\n        switch(id) {\r\n            case \"1\":\r\n                date = \"day\";\r\n                break;\r\n            case \"2\":\r\n                date = \"week\";\r\n                break;\r\n            case \"3\":\r\n                date = \"month\";\r\n                break;\r\n            case \"4\":\r\n                date = \"year\";\r\n                break;\r\n        }\r\n\r\n        this.props.onDateChange(date);\r\n\r\n        \r\n        this.setState({filter: {date: parseInt(id), ascendant: ascendant}});\r\n        console.log(this.state.filter);\r\n    }\r\n\r\n    handleFromOrderRadioChange = (event) => {\r\n        let pos = event.target.id.lastIndexOf(\"-\");\r\n        let id = event.target.id.substr(pos+1,1);\r\n        let value = id === \"1\";\r\n        \r\n        let date = this.state.filter.date;\r\n\r\n        let order;\r\n\r\n        switch(id) {\r\n            case \"1\":\r\n                order = \"asc\";\r\n                break;\r\n            case \"2\":\r\n                order = \"desc\";\r\n                break;\r\n        }\r\n\r\n        this.props.onOrderChange(order);\r\n\r\n        this.setState({filter: {date: date, ascendant: value}});\r\n        console.log(this.state.filter);\r\n    }\r\n\r\n    handleFilter = () => {\r\n        this.handleModalClose();\r\n        this.props.onFilter();\r\n    }\r\n\r\n    handleApplyFilters = async () => {\r\n        alert('NU AVEM FILTRE');\r\n        return;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Modal show={this.state.show} onHide={this.handleModalClose}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Filter posts by</Modal.Title>\r\n                    </Modal.Header>\r\n\r\n                    <Modal.Body>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                Date:\r\n                                <Form onChange={this.handleFormDateRadioChange}>\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        id=\"radio-option-date-0\"\r\n                                        label=\"Any time\"\r\n                                        name=\"radio\"\r\n                                        checked={this.state.filter.date === 0}\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        id=\"radio-option-date-1\"\r\n                                        label=\"Last Day\"\r\n                                        name=\"radio\"\r\n                                        checked={this.state.filter.date === 1}\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        id=\"radio-option-date-2\"\r\n                                        label=\"Last Week\"\r\n                                        name=\"radio\"\r\n                                        checked={this.state.filter.date === 2}\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        id=\"radio-option-date-3\"\r\n                                        label=\"Last Month\"\r\n                                        name=\"radio\"\r\n                                        checked={this.state.filter.date === 3}\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        id=\"radio-option-date-4\"\r\n                                        label=\"Last Year\"\r\n                                        name=\"radio\"\r\n                                        checked={this.state.filter.date === 4}\r\n                                    />\r\n                                </Form>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Order:\r\n                                <Form onChange={this.handleFromOrderRadioChange}>\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        id=\"radio-option-order-1\"\r\n                                        label=\"Oldest first\"\r\n                                        name=\"order\"\r\n                                        checked={this.state.filter.ascendant === true}\r\n                                    />\r\n                                    <Form.Check\r\n                                        type=\"radio\"\r\n                                        id=\"radio-option-order-2\"\r\n                                        label=\"Newest first\"\r\n                                        name=\"order\"\r\n                                        checked={this.state.filter.ascendant === false}\r\n                                    />\r\n                                </Form>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        <Modal.Footer>\r\n                            <Button\r\n                                variant=\"secondary\"\r\n                                onClick={this.handleModalClose}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"primary\"\r\n                                onClick={this.handleFilter}\r\n                            >\r\n                                Apply filters\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Button\r\n                    id=\"nav-filter-button\"\r\n                    onClick={this.handleModalOpen}\r\n                    id=\"filter-button\"\r\n                >\r\n                    {\"\"}\r\n                    Filter{\"\"}\r\n                </Button>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilterModal;","import React, { Component } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nimport FilterModal from \"./FilterModal.jsx\";\r\n\r\nclass SearchBar extends Component {\r\n    state = { };\r\n\r\n    handleSearchChange = (event) => {\r\n        console.log('onChange: ' + event.target.value);\r\n    }\r\n\r\n    handleSearchKeyPress = (event) => {\r\n        console.log('onKeyPress: ' + event.target.value);\r\n    }\r\n\r\n    handleSearch = () => {\r\n        console.log('Button for search pressed');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"navbar-parent\">\r\n                    <Form id=\"navbar-search\">\r\n                        <Form.Control type=\"text\" placeholder=\"Search...\" onChange={this.props.onSearchChange} />\r\n                        <FilterModal onDateChange={this.props.onDateChange} onOrderChange={this.props.onOrderChange} onFilter={this.props.onFilter} />\r\n                        <Button id=\"preferences-setup-search-button\" variant=\"primary\" onClick={this.props.onFilter}>\r\n                            Search\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Logout from \"../utility/Logout.jsx\";\r\nimport SearchBar from \"../utility/SearchBar.jsx\";\r\nimport '../../style/style.scss';\r\n\r\nimport session from \"../../util/session.js\";\r\n\r\nclass CommonNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar\r\n          id=\"navbar\"\r\n          bg=\"white\"\r\n          expand=\"sm\"\r\n          className=\"sticky-top border-bottom\"\r\n        >\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <img\r\n                className=\"image-brand rounded-img shadow-img\"\r\n                width=\"32\"\r\n                height=\"32\"\r\n                src={process.env.PUBLIC_URL + \"/res/img/logo512.png\"}\r\n                alt=\"Brand\"\r\n              />\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          {this.props.authenticated ? (\r\n            this.props.withSearch ? (\r\n              <React.Fragment>\r\n\r\n                <SearchBar onSearchChange={this.props.onSearchChange} onOrderChange={this.props.onOrderChange} onDateChange={this.props.onDateChange} onFilter={this.props.onFilter} />\r\n              \r\n                <Nav className=\"ml-auto\">\r\n                  <NavDropdown\r\n                    title={\r\n                      session.isReady() ?\r\n                        <React.Fragment>\r\n                          <img\r\n                            className=\"image-brand\"\r\n                            width=\"32\"\r\n                            height=\"32\"\r\n                            src={session.get().avatar}\r\n                            alt={session.get().username}\r\n                          />\r\n                          <span id=\"username\">{session.get().username}</span>\r\n                        </React.Fragment>\r\n                        : \"\"\r\n                    }\r\n                  >\r\n                    <LinkContainer to=\"/profile\">\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/settings\">\r\n                      <NavDropdown.Item>Settings</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <Logout />\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </React.Fragment>\r\n            ) : (\r\n              <Navbar.Collapse>\r\n                <Nav className=\"ml-auto\">\r\n                  <NavDropdown\r\n                    title={\r\n                      session.isReady() ?\r\n                        <React.Fragment>\r\n                          <img\r\n                            className=\"image-brand\"\r\n                            width=\"32\"\r\n                            height=\"32\"\r\n                            src={session.get().avatar}\r\n                            alt={session.get().username}\r\n                          />\r\n                          <span id=\"username\">{session.get().username}</span>\r\n                        </React.Fragment>\r\n                        : \"\"\r\n                    }\r\n                  >\r\n                    <LinkContainer to=\"/profile\">\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/settings\">\r\n                      <NavDropdown.Item>Settings</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <Logout />\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Navbar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonNavbar;","import React, { Component } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nclass CommonPost extends Component {\r\n    state = {};\r\n\r\n    handleMonth = (month) => {\r\n        switch(month.toLowerCase()) {\r\n            case \"january\":\r\n                return \"01\";\r\n            case \"february\":\r\n                return \"02\";\r\n            case \"march\":\r\n                return \"03\";\r\n            case \"april\":\r\n                return \"04\";\r\n            case \"may\":\r\n                return \"05\";\r\n            case \"june\":\r\n                return \"06\";\r\n            case \"july\":\r\n                return \"07\";\r\n            case \"august\":\r\n                return \"08\";\r\n            case \"september\":\r\n                return \"09\";\r\n            case \"october\":\r\n                return \"10\";\r\n            case \"november\":\r\n                return \"11\";\r\n            case \"december\":\r\n                return \"12\";\r\n        }\r\n    }\r\n\r\n    handleDate = (date) => {\r\n        let today = new Date();\r\n        let dd = String(today.getDate()).padStart(2, '0');\r\n        let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        let yyyy = today.getFullYear();\r\n\r\n        let newDate = date.split(' ')[0].replace(/-/g, ' ');\r\n        let returnDate;\r\n        let newDateList = newDate.split(' ');\r\n\r\n        if(parseInt(newDateList[2]) === yyyy && this.handleMonth(newDateList[1]) === mm) {\r\n            if(dd === newDateList[0]){\r\n                returnDate = \"Today\";\r\n            } \r\n            else if(Math.abs(parseInt(dd) - parseInt(newDateList[0])) === 1) {\r\n                returnDate = \"Yesterday\";\r\n            }\r\n            else\r\n                returnDate = Math.abs(parseInt(dd) - parseInt(newDateList[0])) + \" days ago\";\r\n        }\r\n        else\r\n            returnDate = newDateList.join(' ');\r\n        return returnDate;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"post-container\">\r\n                    <a className=\"post-readmore\" href={this.props.url} target=\"_blank\">\r\n                        [read more]\r\n                </a>\r\n                    <div className=\"post-header\">\r\n                        <LinkContainer to={\"/\" + this.props.provider.id}>\r\n                            <div className=\"pointer\">\r\n                                <img className=\"post-provider-avatar\" src={this.props.provider.avatar} alt=\"Avatar\" />\r\n                                <span className=\"post-provider-name\">\r\n                                    {this.props.provider.name}\r\n                                </span>\r\n                            </div>\r\n                        </LinkContainer>\r\n                        <div>\r\n                            {/* <LinkContainer to=\"#\">\r\n                            <a className=\"post-feedback-text text-secondary\">\r\n                                (feedback)\r\n                            </a>\r\n                        </LinkContainer> */}\r\n                            <span className=\"post-date\"> {this.handleDate(this.props.date)} </span>\r\n                            <span className={`post-credibility-${this.props.fake === \"true\" ? 'good' : (this.props.fake === 'other' ? 'other' : 'bad')}`}>\r\n                                {this.props.fake}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"post-body\">\r\n                        <a href={this.props.url} target=\"_blank\">\r\n                            <img className=\"post-thumbnail\" src={this.props.title !== \"Unknown\" ? this.props.title : (process.env.PUBLIC_URL + \"/res/img/default_thumbnail.png\")} alt=\"Thumbnail\" />\r\n                        </a>\r\n                        <a className=\"post-title\" href={this.props.url} target=\"_blank\">\r\n                            {this.props.thumbnail}\r\n                        </a>\r\n                        <div className=\"post-description text-secondary\">\r\n                            {this.props.description.toString().substring(0, 300).replace(/\\\\/g, \"\") + \"...\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommonPost;","import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport session from \"../../util/session\"\r\n\r\nfunction RedirectIfNeeded() {\r\n  if(!session.isLoaded() || session.isReady()) {\r\n    return (<React.Fragment />);\r\n  }\r\n  else {\r\n    return (\r\n      <Redirect to=\"/\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RedirectIfNeeded;\r\n","export default {\r\n    getProviderFromURL: (url) => {\r\n        if(url.includes('https://www.bbc.com')) {\r\n            return 0;\r\n        }\r\n        if(url.includes('https://www.buzzfeednews.com')) {\r\n            return 1;\r\n        }\r\n        if(url.includes('https://www.dailymail.co.uk')) {\r\n            return 2;\r\n        }\r\n        if(url.includes('https://www.huffpost.com')) {\r\n            return 3;\r\n        }\r\n        if(url.includes('https://www.nbcnews.com')) {\r\n            return 4;\r\n        }\r\n        if(url.includes('https://nypost.com')) {\r\n            return 5;\r\n        }\r\n    },\r\n    getProviderImg: (prov_id) => {\r\n        switch(prov_id) {\r\n            case 0:\r\n                return process.env.PUBLIC_URL + '/res/img/providers/bbc.png';\r\n            case 1:\r\n                return process.env.PUBLIC_URL + '/res/img/providers/buzz.png';\r\n            case 2:\r\n                return process.env.PUBLIC_URL + '/res/img/providers/dailymail.png';\r\n            case 3:\r\n                return process.env.PUBLIC_URL + '/res/img/providers/huff.png';\r\n            case 4:\r\n                return process.env.PUBLIC_URL + '/res/img/providers/nbc.png';\r\n            case 5:\r\n                return process.env.PUBLIC_URL + '/res/img/providers/nypost.png';\r\n        }\r\n    },\r\n    getProviderName: (prov_id) => {\r\n        switch(prov_id) {\r\n            case 0:\r\n                return 'BBC News';\r\n            case 1:\r\n                return 'BuzzFeed News';\r\n            case 2:\r\n                return 'Daily Mail';\r\n            case 3:\r\n                return 'HuffPost';\r\n            case 4:\r\n                return 'NBC News';\r\n            case 5:\r\n                return 'New York Post';\r\n        }\r\n    },\r\n    getProviderURL: (prov_id) => {\r\n        switch(prov_id) {\r\n            case 0:\r\n                return 'https://www.bbc.com/news';\r\n            case 1:\r\n                return 'https://www.buzzfeednews.com';\r\n            case 2:\r\n                return 'https://www.dailymail.co.uk';\r\n            case 3:\r\n                return 'https://www.huffpost.com';\r\n            case 4:\r\n                return 'https://www.nbcnews.com';\r\n            case 5:\r\n                return 'https://nypost.com';\r\n        }\r\n    },\r\n    getProviderDesc: (prov_id) => {\r\n        switch(prov_id) {\r\n            case 0:\r\n                return 'BBC News is an operational business division of the British Broadcasting Corporation (BBC) responsible for the gathering and broadcasting of news and current affairs. The department is the world\\'s largest broadcast news organisation and generates about 120 hours of radio and television output each day, as well as online news coverage. The service maintains 50 foreign news bureaus with more than 250 correspondents around the world.';\r\n            case 1:\r\n                return 'BuzzFeed News is an American news website published by BuzzFeed. During its relatively short tenure, it has won the George Polk Award, The Sidney Award, National Magazine Award and National Press Foundation award, as well as being a finalist for Pulitzer Prizes.';\r\n            case 2:\r\n                return 'The Daily Mail is a British daily middle-market newspaper published in London in a tabloid format. Founded in 1896, it is the United Kingdom\\'s highest-circulated daily newspaper. Its sister paper The Mail on Sunday was launched in 1982, while Scottish and Irish editions of the daily paper were launched in 1947 and 2006 respectively. Content from the paper appears on the MailOnline website, although the website is managed separately and has its own editor.';\r\n            case 3:\r\n                return 'HuffPost (formerly The Huffington Post until 2017, and sometimes abbreviated HuffPo) is an American news aggregator and blog, with localized and international editions. The site offers news, satire, blogs and original content, and covers politics, business, entertainment, environment, technology, popular media, lifestyle, culture, comedy, healthy living, women\\'s interests and local news featuring columnists. It has been described as liberal-leaning.';\r\n            case 4:\r\n                return 'NBC News is the news division of the American broadcast television network NBC. The division operates under NBCUniversal Television and Streaming, a division of NBCUniversal, which is, in turn, a subsidiary of Comcast. The division presides over America\\'s number-one-rated newscast, NBC Nightly News, and the longest-running television series in American history, Meet The Press, the Sunday morning program of newsmakers interviews. NBC News also offers 70 years of rare historic footage from the NBCUniversal Archives online.';\r\n            case 5:\r\n                return 'The New York Post (sometimes abbreviated as NY Post) is a conservative daily tabloid newspaper in New York City, United States. The Post also operates NYPost.com, the celebrity gossip site PageSix.com and the entertainment site Decider.com. It was established in 1801 by Federalist and Founding Father Alexander Hamilton and became a respected broadsheet in the 19th century under the name New York Evening Post.';\r\n        }\r\n    }\r\n};","import React, { Component } from \"react\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport CommonPost from \"../common/CommonPost.jsx\";\r\nimport request from \"../../util/request.js\";\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport utils from \"../../util/providerFunctions.js\";\r\n\r\nimport session from \"../../util/session\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nconst POST_INITIAL_COUNT = 10;\r\nconst POST_LOAD_COUNT = 5;\r\n\r\nclass PageFeed extends Component {\r\n  state = {\r\n    posts: [],\r\n    postsLoading: true,\r\n    postIndex: 0,\r\n    loadingPosts: false,\r\n    search: \"\",\r\n    date: \"\",\r\n    order: \"desc\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.loadPosts(POST_INITIAL_COUNT);\r\n\r\n    window.addEventListener(\"scroll\", this.listenToScroll, true);\r\n\r\n    this.shouldRedirect();\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.listenToScroll, true);\r\n  }\r\n\r\n  listenToScroll = (e) => {\r\n    if (e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight) {\r\n      this.loadPosts(POST_LOAD_COUNT);\r\n    }\r\n  };\r\n\r\n  loadPosts = (count) => {\r\n    if(this.state.loadingPosts) {\r\n      return;\r\n    }\r\n    this.setState({loadingPosts: true});    \r\n    this.state.loadingPosts = true;\r\n    let body = {\r\n      skip: this.state.postIndex,\r\n      count: count\r\n    };\r\n\r\n    if(this.state.search && this.state.search.length > 0)\r\n      body.query = this.state.search;\r\n    if(this.state.date && this.state.date.length > 0)\r\n      body.date = this.state.date;\r\n    if(this.state.order && this.state.order.length > 0)\r\n      body.order = this.state.order;\r\n\r\n    request\r\n      .get2(request.routes.API_POST_GET_INTERVAL, body, session.authHeaders())\r\n      .then((res) => {\r\n        this.setState({\r\n          posts: this.state.posts.concat(\r\n            res.data.map((p) => {\r\n              return {\r\n                provider: {\r\n                  avatar: utils.getProviderImg(utils.getProviderFromURL(p.url)),\r\n                  name: utils.getProviderName(utils.getProviderFromURL(p.url)),\r\n                  id: utils.getProviderFromURL(p.url),\r\n                },\r\n                id: p.id,\r\n                title: p.title,\r\n                thumbnail: p.thumbnail,\r\n                description: p.description,\r\n                url: p.url,\r\n                fake: p.score,\r\n                date: p.postDate,\r\n              };\r\n            })\r\n          ),\r\n          postIndex: this.state.postIndex + count,\r\n          postsLoading: false\r\n        });\r\n        this.setState({loadingPosts: false});\r\n        this.state.loadingPosts = false; \r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          postsLoading: false\r\n        });\r\n        \r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  shouldRedirect = () => {\r\n    request.get2(request.routes.API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS, {\r\n      uid: session.get().userId,\r\n      skip: 0,\r\n      count: 10\r\n    }, session.authHeaders()).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({redirectComponent: res.data.length === 0 ? <Redirect to=\"/setup\" /> : \"\"});\r\n      }).catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  handleFilter = () => {\r\n    this.setState({\r\n      posts: [],\r\n      postIndex: 0,\r\n      postsLoading: true,\r\n      loadingPosts: true\r\n    });\r\n\r\n    this.state.postIndex = 0;\r\n\r\n    this.loadPosts(POST_INITIAL_COUNT)\r\n  }\r\n\r\n  handleSearchChange = (event) => {\r\n    this.setState({\r\n      search: event.target.value\r\n    });\r\n  }\r\n\r\n  handleDateChange = (value) => {\r\n    this.setState({\r\n      date: value\r\n    });\r\n  }\r\n\r\n  handleOrderChange = (value) => {\r\n    this.setState({\r\n      order: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RedirectIfNeeded></RedirectIfNeeded>\r\n        {this.state.redirectComponent}\r\n        <CommonNavbar authenticated withSearch onSearchChange={this.handleSearchChange} onDateChange={this.handleDateChange} onOrderChange={this.handleOrderChange} onFilter={this.handleFilter}/>\r\n        <main id=\"main-feed\">\r\n        {\r\n            this.state.postsLoading ? <p id=\"feed-loading-label\">Loading...</p> :\r\n              ((!this.state.posts || this.state.posts.length === 0) ? <p id=\"feed-loading-label\">Whoops, there are no posts.</p> :\r\n                this.state.posts.map((post) => {\r\n                  return <CommonPost {...post} key={`post-${post.id}`} />;\r\n                })\r\n              )\r\n          }\r\n        </main>\r\n        <CommonFooter fixed /> {/*{...(this.state.postsLoading ? {fixed: true} : {sticky: true})}*/}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFeed;\r\n","import React, { Component } from \"react\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport session from \"../../util/session.js\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nclass PageProfile extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RedirectIfNeeded></RedirectIfNeeded>\r\n        <CommonNavbar authenticated />\r\n        <div id=\"profile-container\">\r\n          <div id=\"profile-header\">\r\n            <img src={session.get().avatar} alt={session.get().username} id=\"profile-avatar-center\"/>\r\n            <div id=\"profile-username\">\r\n              <h1>{session.get().username}</h1>\r\n            </div>\r\n          </div>\r\n          <div id=\"bio-container-profile\" className=\"justify-content-center\">\r\n            <div id=\"bio-text-container\">{session.get().bio}</div>\r\n          </div>\r\n        </div>\r\n        <CommonFooter fixed />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageProfile;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport CommonPost   from \"../common/CommonPost.jsx\";\r\nimport request from \"../../util/request.js\";\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport session from \"../../util/session\";\r\n\r\nimport utils from \"../../util/providerFunctions.js\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nconst POST_INITIAL_COUNT = 10;\r\nconst POST_LOAD_COUNT = 5;\r\n\r\nclass PageProfileProvider extends Component {\r\n  state = {\r\n    providerReady: false,\r\n    provider: {},\r\n    posts: [],\r\n    providerValid: true,\r\n    postIndex: 0\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    request.get2(request.routes.API_PROVIDER_BY_ID, {\r\n      provider_id: this.props.match.params.providerId \r\n    }, session.authHeaders()).then((res) => {\r\n        this.setState({\r\n          provider: {\r\n            avatar: utils.getProviderImg(res.data.id),\r\n            name: utils.getProviderName(res.data.id),\r\n            id: res.data.id,\r\n            bio: utils.getProviderDesc(res.data.id),\r\n            url: utils.getProviderURL(res.data.id),\r\n          },\r\n          providerValid: res.data ? true : false,\r\n          providerReady: true\r\n        });\r\n\r\n      }).catch((err) => {\r\n        console.error(err);\r\n        this.setState({\r\n          providerValid: false\r\n        });\r\n    });\r\n    this.loadPosts(POST_INITIAL_COUNT);\r\n    window.addEventListener(\"scroll\", this.listenToScroll, true);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.listenToScroll, true);\r\n  }\r\n\r\n  listenToScroll = (e) => {\r\n    if (e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight) {\r\n      this.loadPosts(POST_LOAD_COUNT);\r\n    }\r\n  };\r\n\r\n  loadPosts = (count) => {\r\n    request\r\n      .get2(request.routes.API_POST_GET_INTERVAL_BY_PROVIDER, {\r\n        provider_id: this.props.match.params.providerId,\r\n        skip: this.state.postIndex,\r\n        count: count,\r\n      }, session.authHeaders())\r\n      .then((res) => {\r\n        this.setState({\r\n          posts: this.state.posts.concat(\r\n            res.data.map((p) => {\r\n              return {\r\n                provider: {\r\n                  avatar: utils.getProviderImg(utils.getProviderFromURL(p.url)),\r\n                  name: utils.getProviderName(utils.getProviderFromURL(p.url)),\r\n                  id: utils.getProviderFromURL(p.url),\r\n                },\r\n                id: p.id,\r\n                title: p.title,\r\n                thumbnail: p.thumbnail,\r\n                description: p.description,\r\n                url: p.url,\r\n                fake: p.score,\r\n                date: p.postDate,\r\n              };\r\n            })\r\n          ),\r\n          postIndex: this.state.postIndex + count,\r\n          postsLoading: false\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          postsLoading: false\r\n        });\r\n        \r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RedirectIfNeeded></RedirectIfNeeded>\r\n      {this.state.providerValid === true && this.state.providerValid === false ? <Redirect to=\"/feed\" /> : \r\n      <React.Fragment>\r\n        <CommonNavbar authenticated />\r\n        {this.state.providerReady ? \r\n        <React.Fragment>\r\n            <div id=\"profile-container\">\r\n          <div id=\"profile-header\">\r\n            <img className=\"photo-border\" src={this.state.provider.avatar} alt=\"User avatar\" />\r\n            <div id=\"provider-profile-name-credibility\">\r\n              <h1> {this.state.provider.name}  </h1>\r\n              <h2> Webiste: <a href={this.state.provider.url} target=\"_blank\"> {this.state.provider.name} </a> </h2>\r\n            </div>\r\n          </div>\r\n          <div id=\"bio-container-provider\" className=\"justify-content-center\">\r\n            <div id=\"bio-text-container\" >\r\n              {this.state.provider.bio}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"horizontal-line\">\r\n\r\n        </div>\r\n\r\n        <div id=\"profile-posts\">\r\n          <main className=\"main-profile-provider\">\r\n            {this.state.posts.map(post => {\r\n              return <CommonPost {...post} />\r\n            })}\r\n          </main>\r\n        </div>\r\n        </React.Fragment> \r\n        :\r\n        \"\" \r\n      }\r\n        \r\n\r\n        <CommonFooter fixed />\r\n      </React.Fragment>\r\n    }\r\n    </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default PageProfileProvider;","import React, { Component } from \"react\";\r\n\r\nimport session from \"../../util/session\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nclass JustUserPicture extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {session.isReady() ?\r\n                <img \r\n                id=\"photo-border\"\r\n                src={session.get().avatar} alt={session.get().username}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                />\r\n                : \"Loading...\"}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JustUserPicture;","import React, { Component } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nclass ProviderPreference extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"preference-provider\">\r\n          <LinkContainer to={\"/\" + this.props.id}>\r\n            <img\r\n              className=\"photo-border\"\r\n              alt={\"Avatar of \" + this.props.name}\r\n              src={this.props.avatar}\r\n              width=\"128\"\r\n              height=\"128\"\r\n            />\r\n          </LinkContainer>\r\n          <div className=\"preference-provider-flexer\">\r\n            <LinkContainer to={\"/\" + this.props.id}>\r\n              <span className=\"preference-provider-info-name\"> {this.props.name} </span>\r\n            </LinkContainer>\r\n            <Form className=\"ml-auto subscribe-form\">\r\n              <div key={`provider-checkbox` + this.props.name} className=\"mb-3\">\r\n                <Form.Check\r\n                  variant=\"primary\"\r\n                  type=\"checkbox\"\r\n                  id={`provider-checkbox` + this.props.name}\r\n                  label={`Subscribed`}\r\n                  onChange={() => { \r\n                    this.props.onChange(); \r\n                    this.forceUpdate();\r\n                  }}\r\n                  checked={this.props.checked}\r\n                />\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProviderPreference;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  Form,\r\n  Pagination,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport JustUserPicture from \"../common/JustUserPicture.jsx\";\r\n\r\nimport \"../../style/style.scss\";\r\nimport ProviderPreference from \"../utility/ProviderPreference.jsx\";\r\n\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport request from \"../../util/request.js\";\r\nimport session from \"../../util/session.js\";\r\n\r\nimport utils from \"../../util/providerFunctions.js\";\r\n\r\nconst PAGINATION_VISIBLE_COUNT = 3;\r\nconst PAGINATION_PROVIDERS_PER_PAGE = 3;\r\n\r\nlet PageSettings = () => {\r\n  let [provider, setProvider] = useState({ count: 0, list: [] });\r\n  let [query, setQuery] = useState(\"\");\r\n  let [searchQuery, setSearchQuery] = useState(\"\");\r\n  let [pagination, setPagination] = useState({\r\n    index: 1,\r\n    count: 0,\r\n  });\r\n  let [alert, setAlert] = useState(null);\r\n  let [sessionInterval, setSessionInterval] = useState(null);\r\n  let [, updateState] = React.useState();\r\n  let forceUpdate = React.useCallback(() => updateState({}), []);\r\n  let [showModal, setShowModal] = useState(false);\r\n\r\n  //TEMPORAL\r\n  let [imageUrl, setImageUrl] = useState(\"\");\r\n  let [passwordUser, setPasswordUser] = useState(\"\");\r\n  let [confirmPasswordUser, setConfirmPasswordUser] = useState(\"\");\r\n\r\n  let [Bio, setBio] = useState(\"\");\r\n  let [initialized, setInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!initialized) {\r\n      setInitialized(true);\r\n      updateProviderCount();\r\n      if (!session.isReady()) {\r\n        sessionInterval = setInterval(() => {\r\n          if (session.isReady()) {\r\n            clearInterval(sessionInterval);\r\n          }\r\n        }, 10);\r\n      }\r\n    }\r\n  });\r\n\r\n  let handleBioKeyChange = (event) => {\r\n    setBio(event.target.value);\r\n  };\r\n\r\n  let handleWeakRegex = (pass) => {\r\n    const weakRegex = /^(?=.*[A-Za-z])(?=.*[0-9])[A-Za-z0-9]{8,32}$/g;\r\n    // string must containt at least one digit and alphabetical letter with the a minimum length of 8 and a maximum length of 32\r\n\r\n    if (!weakRegex.test(pass)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  let handleMediumRegex = (pass) => {\r\n    const mediumRegex = /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[A-Za-z0-9]{8,32}$/g;\r\n    // string must containt at least one digit, one lowercase alphabetical letter and one uppercase alphabetical letter with the a minimum length of 8 and a maximum length of 32\r\n\r\n    if (!mediumRegex.test(pass)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  let handleStrongRegex = (pass) => {\r\n    const strongRegex =\r\n      /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*()\\-_=+\\[\\]{}<.>/?~])[A-Za-z0-9!@#$%^&*()\\-_=+\\[\\]{}<.>/?~]{8,32}$/g;\r\n    // string must containt one digit, one lowercase alphabetical letter, one uppercase alphabetical letter and one of the specified special characters with the a minimum length of 8 and a maximum length of 32\r\n\r\n    if (!strongRegex.test(pass)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  let handlePassword = (pass) => {\r\n    if (!handleStrongRegex(pass)) {\r\n      if (!handleMediumRegex(pass)) {\r\n        if (!handleWeakRegex(pass)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  let updateProviders = () => {\r\n    request\r\n      .get2(\r\n        searchQuery.length > 0\r\n          ? request.routes.API_PROVIDER_SEARCH\r\n          : request.routes.API_PROVIDER_GET_INTERVAL,\r\n        {\r\n          skip: PAGINATION_PROVIDERS_PER_PAGE * (pagination.index - 1),\r\n          count: Math.min(\r\n            PAGINATION_PROVIDERS_PER_PAGE,\r\n            provider.count -\r\n              PAGINATION_PROVIDERS_PER_PAGE * (pagination.index - 1)\r\n          ),\r\n          query: query,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        provider.list = [];\r\n        for(let i = 0; i < res.data.length; ++i) {\r\n          provider.list.push(res.data[i]);\r\n          provider.list[i].avatar = utils.getProviderImg(provider.list[i].id);\r\n          provider.list[i].name = utils.getProviderName(provider.list[i].id);\r\n        }\r\n        // setProvider({\r\n        //   ...provider,\r\n        //   list: res.data.map(element => ({\r\n        //     ...element,\r\n        //     avatar: utils.getProviderImg(element.id),\r\n        //     name: utils.getProviderName(element.id),\r\n        //   })),\r\n        // });\r\n        // provider = {\r\n        //   ...provider,\r\n        //   list: res.data.map(element => ({\r\n        //     ...element,\r\n        //     avatar: utils.getProviderImg(element.id),\r\n        //     name: utils.getProviderName(element.id),\r\n        //   })),\r\n        // };\r\n        forceUpdate();\r\n        updateProviderChecked(); \r\n      })\r\n\r\n      .catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let updateProviderCount = () => {\r\n    request\r\n      .get2(\r\n        searchQuery.length > 0\r\n          ? request.routes.API_PROVIDER_SEARCH_COUNT\r\n          : request.routes.API_PROVIDER_COUNT,\r\n        {\r\n          query: query,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        let providerCount = res.data.count;\r\n\r\n        setProvider({\r\n          ...provider,\r\n          count: providerCount,\r\n        });\r\n        provider = {\r\n          ...provider,\r\n          count: providerCount,\r\n        };\r\n        setPagination({\r\n          ...pagination,\r\n          count: Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE),\r\n        });\r\n\r\n        pagination = {\r\n          ...pagination,\r\n          count: Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE),\r\n        };\r\n\r\n        updateProviders();\r\n      })\r\n      .catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let updateProviderChecked = () => {\r\n    provider.list.map((providerElem, index) => {\r\n      request\r\n        .get2(\r\n          request.routes.API_PREFERENCES_GET,\r\n          {\r\n            uid: session.get().userId,\r\n            prov_id: providerElem.id,\r\n          },\r\n          session.authHeaders()\r\n        )\r\n        .then((res) => {\r\n          let checked = res.data.toString().trim().toLowerCase() === \"1\";\r\n          provider.list[index].checked = checked; //@SEE\r\n          forceUpdate();\r\n          //console.log('forced');\r\n        })\r\n        .catch((err) => {\r\n          session.onUpdate();\r\n          console.error(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  let handlePaginationFactory = (i) => {\r\n    return (event) => {\r\n      if (i >= 1 && i <= pagination.count) {\r\n        setPagination({\r\n          ...pagination,\r\n          index: i,\r\n        });\r\n        pagination = {\r\n          ...pagination,\r\n          index: i,\r\n        };\r\n        updateProviders();\r\n      }\r\n    };\r\n  };\r\n\r\n  let handleSearchKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  let handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  let handleSearch = () => {\r\n    setQuery(searchQuery);\r\n    console.log(`Search: ${query}`);\r\n    updateProviderCount();\r\n  };\r\n\r\n  let handleSaveSettings = () => {\r\n    provider.list.map((provider, index) => {\r\n      request\r\n        .put2(\r\n          request.routes.API_PREFERENCES_UPDATE,\r\n          {\r\n            uid: session.get().userId,\r\n            prov_id: provider.id,\r\n            status: provider.checked ? true : false,\r\n          },\r\n          session.authHeaders()\r\n        )\r\n        .then((res) => {\r\n          document.body.scrollTop = 0; // For Safari\r\n          document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n          setAlert(\r\n            <Alert id={\"animation\"} key={\"somekey\"} variant={\"success\"}>\r\n              Preferences updated!\r\n            </Alert>\r\n          );\r\n          setTimeout(() => {\r\n            setAlert(null);\r\n          }, 4000);\r\n        })\r\n        .catch((err) => {\r\n          document.body.scrollTop = 0; // For Safari\r\n          document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n          setAlert(\r\n            <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n              Internal server error!\r\n            </Alert>\r\n          );\r\n          setTimeout(() => {\r\n            setAlert(null);\r\n          }, 4000);\r\n          console.error(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  let openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  let handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  let handleImageChange = async () => {\r\n    request\r\n      .put2(\r\n        request.routes.API_USER_UPDATE,\r\n        {\r\n          id: session.get().userId,\r\n          avatar: imageUrl,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        //console.log(res);\r\n        handleModalClose();\r\n        session.get().avatar = imageUrl;\r\n        setAlert(\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"success\"}>\r\n            Image changed successfully!\r\n          </Alert>\r\n        );\r\n        setTimeout(() => {\r\n          setAlert(null);\r\n        }, 4000);\r\n      })\r\n      .catch((err) => {\r\n        setAlert(\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n            Internal server error!\r\n          </Alert>\r\n        );\r\n        setTimeout(() => {\r\n          setAlert(null);\r\n        }, 4000);\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let handleBioChange = async () => {\r\n    console.log(passwordUser);\r\n    request\r\n      .put2(\r\n        request.routes.API_USER_UPDATE,\r\n        {\r\n          id: session.get().userId,\r\n          bio: Bio,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        setAlert(\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"success\"}>\r\n            Bio changed successfully!\r\n          </Alert>\r\n        );\r\n        setTimeout(() => {\r\n          setAlert(null);\r\n        }, 4000);\r\n        return;\r\n      })\r\n      .catch((err) => {\r\n        setAlert(\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n            Internal server error!\r\n          </Alert>\r\n        );\r\n        setTimeout(() => {\r\n          setAlert(null);\r\n        }, 4000);\r\n        return;\r\n      });\r\n  };\r\n\r\n  let handlePasswordChange = async () => {\r\n    console.log(passwordUser);\r\n    if (!handlePassword(passwordUser)) {\r\n      setAlert(\r\n        <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n          Incorrect username or password!\r\n        </Alert>\r\n      );\r\n      setTimeout(() => {\r\n        setAlert(null);\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    if (passwordUser !== confirmPasswordUser) {\r\n      setAlert(\r\n        <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n          Passwords do not match!\r\n        </Alert>\r\n      );\r\n      setTimeout(() => {\r\n        setAlert(null);\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    request\r\n      .put2(\r\n        request.routes.API_USER_UPDATE,\r\n        {\r\n          id: session.get().userId,\r\n          password: passwordUser,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        setAlert(\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"success\"}>\r\n            Password changed successfully!\r\n          </Alert>\r\n        );\r\n        setTimeout(() => {\r\n          setAlert(null);\r\n        }, 4000);\r\n        return;\r\n        //window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        setAlert(\r\n          <Alert id={\"animation\"} key={\"somekey\"} variant={\"danger\"}>\r\n            Password changed successfully!\r\n          </Alert>\r\n        );\r\n        setTimeout(() => {\r\n          setAlert(null);\r\n        }, 4000);\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let handleUrlKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleImageChange();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  let handleUrlChange = (event) => {\r\n    setImageUrl(event.target.value);\r\n  };\r\n\r\n  let handlePassKeyChange = (event) => {\r\n    console.log(passwordUser);\r\n    setPasswordUser(event.target.value);\r\n  };\r\n\r\n  let handleConfirmPassKeyChange = (event) => {\r\n    console.log(confirmPasswordUser);\r\n    setConfirmPasswordUser(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <RedirectIfNeeded></RedirectIfNeeded>\r\n      <CommonNavbar authenticated />\r\n      <div id=\"settings-container\">\r\n        <alertMessageSettings>{alert}</alertMessageSettings>\r\n        <Tabs defaultActiveKey=\"account\" className=\"justify-content-center\" onSelect={updateProviders}>\r\n          <Tab eventKey=\"account\" title=\"Account Settings\">\r\n            <div className=\"tab-custom-container\">\r\n              <div id=\"account-settings-container\">\r\n                <div id=\"account-container\">\r\n                  <div id=\"photo-container\" className=\"justify-content-center\">\r\n                    <div id=\"photo-with-button\">\r\n                      <JustUserPicture />\r\n                      <Modal show={showModal} onHide={handleModalClose}>\r\n                        <Modal.Header closeButton>\r\n                          <Modal.Title>Please write an image URL</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                          <Form.Group\r\n                            controlId=\"formchangePicture\"\r\n                            id=\"formmargin\"\r\n                          >\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"write image url\"\r\n                              onChange={handleUrlChange}\r\n                              onKeyPress={handleUrlKeyPress}\r\n                            />\r\n                          </Form.Group>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                          <Button\r\n                            variant=\"secondary\"\r\n                            onClick={handleModalClose}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button variant=\"primary\" onClick={handleImageChange}>\r\n                            Save Changes\r\n                          </Button>\r\n                        </Modal.Footer>\r\n                      </Modal>\r\n                      <Button onClick={openModal} id=\"settings-button\">\r\n                        {\" \"}\r\n                        Edit{\" \"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div id=\"password-container\" className=\"justify-content-center\">\r\n                  <div className=\"password-container-row\">\r\n                    <Form.Group controlId=\"formchangePassword\" id=\"formmargin\">\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"New Password\"\r\n                        onChange={handlePassKeyChange}\r\n                      />\r\n                    </Form.Group>\r\n                  </div>\r\n                  <div className=\"password-container-row\">\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm New Password\"\r\n                        onChange={handleConfirmPassKeyChange}\r\n                      />\r\n                    </Form.Group>\r\n                    <Button onClick={handlePasswordChange}>\r\n                      Change password\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div id=\"bio-container\" className=\"justify-content-center\">\r\n                  <Button id=\"btnBio\" onClick={handleBioChange}>\r\n                    Change Bio\r\n                  </Button>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={4}\r\n                    className=\"noSizable\"\r\n                    onChange={handleBioKeyChange}\r\n                  >\r\n                    {session.get().bio}\r\n                  </Form.Control>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n\r\n          <Tab eventKey=\"preferences\" title=\"Preferences Settings\">\r\n            <div className=\"tab-custom-container\">\r\n              <div id=\"preferences-settings-container\">\r\n                <Form id=\"preferences-settings-search\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={handleSearchChange}\r\n                    onKeyPress={handleSearchKeyPress}\r\n                  />\r\n                  <Button\r\n                    id=\"preferences-settings-search-button\"\r\n                    variant=\"primary\"\r\n                    onClick={handleSearch}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Form>\r\n                {provider.list.length > 0 ? (\r\n                  provider.list.map((providerElem, index) => {\r\n                    //console.log(\"hah\");\r\n                    //console.log(provider.list);\r\n                    //console.log(\"heh\");\r\n                    //console.log('hello');\r\n                    return (\r\n                      <ProviderPreference\r\n                        {...providerElem}\r\n                        onChange={() => {\r\n                          provider.list[index].checked =\r\n                            !provider.list[index].checked;\r\n                          forceUpdate();\r\n                        }}\r\n                        checked={providerElem.checked ? true : false}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div id=\"settings-preferences-loading\">Loading...</div>\r\n                )}\r\n                <Pagination id=\"settings-preferences-pagination\">\r\n                  <Pagination.First onClick={handlePaginationFactory(1)} />\r\n                  <Pagination.Prev\r\n                    onClick={handlePaginationFactory(pagination.index - 1)}\r\n                  />\r\n\r\n                  {pagination.index > PAGINATION_VISIBLE_COUNT ? (\r\n                    <React.Fragment>\r\n                      <Pagination.Item onClick={handlePaginationFactory(1)}>\r\n                        {1}\r\n                      </Pagination.Item>\r\n                      <Pagination.Ellipsis disabled />\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {(() => {\r\n                    let list = [];\r\n\r\n                    for (\r\n                      let i = pagination.index - 1;\r\n                      i >= 1 &&\r\n                      i >=\r\n                        pagination.index - (PAGINATION_VISIBLE_COUNT - 1) / 2;\r\n                      --i\r\n                    ) {\r\n                      list.push(\r\n                        <Pagination.Item onClick={handlePaginationFactory(i)}>\r\n                          {i}\r\n                        </Pagination.Item>\r\n                      );\r\n                    }\r\n\r\n                    return list;\r\n                  })()}\r\n\r\n                  {\r\n                    <Pagination.Item\r\n                      active\r\n                      onClick={handlePaginationFactory(pagination.index)}\r\n                    >\r\n                      {pagination.index}\r\n                    </Pagination.Item>\r\n                  }\r\n\r\n                  {(() => {\r\n                    let list = [];\r\n\r\n                    for (\r\n                      let i = pagination.index + 1;\r\n                      i <= pagination.count &&\r\n                      i <=\r\n                        pagination.index + (PAGINATION_VISIBLE_COUNT - 1) / 2;\r\n                      ++i\r\n                    ) {\r\n                      list.push(\r\n                        <Pagination.Item onClick={handlePaginationFactory(i)}>\r\n                          {i}\r\n                        </Pagination.Item>\r\n                      );\r\n                    }\r\n\r\n                    return list;\r\n                  })()}\r\n\r\n                  {Math.max(pagination.index + 1, 3) < pagination.count ? (\r\n                    <React.Fragment>\r\n                      <Pagination.Ellipsis disabled />\r\n                      <Pagination.Item\r\n                        onClick={handlePaginationFactory(pagination.count)}\r\n                      >\r\n                        {pagination.count}\r\n                      </Pagination.Item>\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  <Pagination.Next\r\n                    onClick={handlePaginationFactory(pagination.index + 1)}\r\n                  />\r\n                  <Pagination.Last\r\n                    onClick={handlePaginationFactory(pagination.count)}\r\n                  />\r\n                </Pagination>\r\n\r\n                <Button id=\"settings-save-btn\" onClick={handleSaveSettings}>\r\n                  {\" \"}\r\n                  Save settings\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n      <CommonFooter fixed />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PageSettings;\r\n","import React, { Component } from \"react\";\r\nimport { Accordion, Card  } from \"react-bootstrap\";\r\n\r\n\r\nclass FAQ_Question extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Accordion.Toggle className=\"faq-question-header\" as={Card.Header} eventKey={this.props.count}>\r\n                    <span>\r\n                        {this.props.count}. {this.props.question}\r\n                    </span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={this.props.count}>\r\n                    <Card.Body className=\"faq-question-body\">\r\n                        <span> {this.props.answer} </span>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FAQ_Question;","import React, { Component } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport FAQ_Question from \"../utility/FAQ_Question.jsx\";\r\n\r\nimport \"../../style/style.scss\";\r\n\r\nclass PageFAQ extends Component {\r\n  state = {\r\n    questions: [\r\n      {\r\n        count: \"1\",\r\n        question: \"What is Fake News Detection?\",\r\n        answer:\r\n          \"Fake News Detection is a site which provides the user with news from various providers. For each news, it displays a probabiliy of it being fake.\",\r\n      },\r\n      {\r\n        count: \"2\",\r\n        question: \"Do I need something special to use it?\",\r\n        answer:\r\n          \"You only need an account on our site and you will be ready to use it after setting up your account.\",\r\n      },\r\n      {\r\n        count: \"3\",\r\n        question: \"Why do I need an account?\",\r\n        answer:\r\n          \"An account is needed so you can receive news from only from the providers that you want.\",\r\n      },\r\n      {\r\n        count: \"4\",\r\n        question: \"How can I change the providers that I am following?\",\r\n        answer: (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            To update your list of followed providers you need to go to the top\r\n            right and press on profile avatar. <br /> From here you go Settings\r\n            &gt; Preferences Settings. <br /> And from here you only need to\r\n            select the providers you want to follow or unfollow. <br /> In the\r\n            end, you will have to press the Save settings button to commit your\r\n            changes.{\" \"}\r\n          </React.Fragment>\r\n        ),\r\n      },\r\n      {\r\n        count: \"5\",\r\n        question: \"Can I access the profile of a news provider?\",\r\n        answer: (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            Yes, you can access it and in two ways. <br /> The first way is to\r\n            click on the provider's avatar from a post. <br /> The other way is\r\n            to go to Settings &gt; Preferences Settings and search for the\r\n            specific provider and click on its avatar.{\" \"}\r\n          </React.Fragment>\r\n        ),\r\n      },\r\n      {\r\n        count: \"7\",\r\n        question: \"How is a news provider's profile different from mine?\",\r\n        answer:\r\n          \"A news provider's profile contains a score of credibility and a list containing a few of their most recent news.\",\r\n      },\r\n      {\r\n        count: \"8\",\r\n        question: \"How do you determine how fake a piece of news is?\",\r\n        answer:\r\n          \"We use a multitude of artificial intelligence algorithms to determine a percentage of how fake a piece of news is.\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"faq-header-container\">\r\n          <div id=\"faq-logo-container\">\r\n            <LinkContainer to=\"/\">\r\n              <img\r\n                id=\"faq-logo\"\r\n                className=\"rounded-img\"\r\n                src={process.env.PUBLIC_URL + \"/res/img/logo512.png\"}\r\n                alt=\"brand logo\"\r\n                width=\"128\"\r\n                height=\"128\"\r\n              />\r\n            </LinkContainer>\r\n          </div>\r\n          <div id=\"faq-title-container\">\r\n            <h1>Frequently asked questions</h1>\r\n          </div>\r\n        </div>\r\n\r\n        <main id=\"faq_main\">\r\n          <Accordion className=\"faq-accordion\">\r\n            {this.state.questions.map((question) => {\r\n              return <FAQ_Question {...question} />;\r\n            })}\r\n          </Accordion>\r\n        </main>\r\n\r\n        <CommonFooter showFAQ={false} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFAQ;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Form, Pagination } from \"react-bootstrap\";\r\n\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport '../../style/style.scss';\r\nimport ProviderPreference from \"../utility/ProviderPreference.jsx\";\r\n\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport request from \"../../util/request.js\";\r\nimport session from \"../../util/session.js\";\r\n\r\nimport utils from \"../../util/providerFunctions.js\";\r\n\r\nconst PAGINATION_VISIBLE_COUNT = 6;\r\nconst PAGINATION_PROVIDERS_PER_PAGE = 6;\r\n\r\nclass PageSetup extends Component {\r\n  state = {\r\n    provider: {\r\n      count: 0,\r\n      list: []\r\n    },\r\n    query: \"\",       // chanes when pressing search\r\n    searchQuery: \"\", // changes with key presses\r\n    pagination: {\r\n      index: 1,\r\n      count: 0\r\n    },\r\n    sessionInterval: null,\r\n    redirectComponent: null\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.updateProviderCount();\r\n\r\n    if(session.isReady()) {\r\n      this.setState();\r\n    } else {\r\n      this.state.sessionInterval = setInterval(() => {\r\n        if(session.isReady()) {\r\n          clearInterval(this.state.sessionInterval);\r\n          this.setState();\r\n        }\r\n      }, 10);\r\n    }\r\n\r\n    this.shouldRedirect();\r\n  }\r\n\r\n  updateProviders = () => {\r\n    request.get2(this.state.searchQuery.length > 0 ? request.routes.API_PROVIDER_SEARCH : request.routes.API_PROVIDER_GET_INTERVAL, {\r\n      skip: PAGINATION_PROVIDERS_PER_PAGE * (this.state.pagination.index - 1),\r\n      count: Math.min(PAGINATION_PROVIDERS_PER_PAGE, this.state.provider.count - PAGINATION_PROVIDERS_PER_PAGE * (this.state.pagination.index - 1)),\r\n      query: this.state.query\r\n    }, session.authHeaders()).then((res) => {\r\n        this.state.provider.list = [];\r\n        for(let i = 0; i < res.data.length; ++i) {\r\n          this.state.provider.list.push(res.data[i]);\r\n          this.state.provider.list[i].avatar = utils.getProviderImg(this.state.provider.list[i].id);\r\n          this.state.provider.list[i].name = utils.getProviderName(this.state.provider.list[i].id);\r\n        }\r\n        // setProvider({\r\n        //   ...provider,\r\n        //   list: res.data.map(element => ({\r\n        //     ...element,\r\n        //     avatar: utils.getProviderImg(element.id),\r\n        //     name: utils.getProviderName(element.id),\r\n        //   })),\r\n        // });\r\n        // provider = {\r\n        //   ...provider,\r\n        //   list: res.data.map(element => ({\r\n        //     ...element,\r\n        //     avatar: utils.getProviderImg(element.id),\r\n        //     name: utils.getProviderName(element.id),\r\n        //   })),\r\n        // };\r\n        this.forceUpdate();\r\n        //this.updateProviderChecked();\r\n      }).catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  updateProviderCount = () => {\r\n    request.get2(this.state.searchQuery.length > 0 ? request.routes.API_PROVIDER_SEARCH_COUNT : request.routes.API_PROVIDER_COUNT, {\r\n      query: this.state.query\r\n    }, session.authHeaders()).then((res) => {\r\n        let providerCount = res.data.count;\r\n\r\n        this.setState({\r\n          provider: {\r\n            ...this.state.provider,\r\n            count: providerCount\r\n          },\r\n          pagination: {\r\n            ...this.state.pagination,\r\n            count: (Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE))\r\n          }\r\n        });\r\n\r\n        this.updateProviders();\r\n      }).catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  updateProviderChecked = () => {\r\n    this.state.provider.list.map((provider, index) => {\r\n      request.get2(request.routes.API_PREFERENCES_GET, {\r\n        uid: session.get().userId,\r\n        prov_id: provider.id\r\n      }, session.authHeaders()).then((res) => {\r\n          let checked = (res.data.toString().trim().toLowerCase() === \"1\");\r\n          \r\n          this.state.provider.list[index].checked = checked;\r\n          this.setState();\r\n          this.forceUpdate();\r\n        }).catch((err) => {\r\n          session.onUpdate();\r\n          console.error(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  handlePaginationFactory = (i) => {\r\n    return (event) => {\r\n        if(i >= 1 && i <= this.state.pagination.count) {\r\n          this.setState({\r\n            pagination: {\r\n              ...this.state.pagination,\r\n              index: i\r\n            }\r\n          }, this.updateProviders)\r\n        }\r\n    };\r\n  }\r\n\r\n  handleSearchKeyPress = (event) => {\r\n    if(event.key === \"Enter\") {\r\n      this.handleSearch();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleSearchChange = (event) => {\r\n    this.setState({ searchQuery: event.target.value });\r\n  }\r\n\r\n  handleSearch = () => {\r\n    this.setState({\r\n      query: this.state.searchQuery\r\n    }, () => {\r\n      this.updateProviderCount();\r\n\r\n      console.log(`Search: ${this.state.query}`);\r\n\r\n      this.updateProviderCount();\r\n    })\r\n  }\r\n\r\n  handleSaveSettings = () => {\r\n    this.state.provider.list.map((provider, index) => {\r\n      request.put2(request.routes.API_PREFERENCES_UPDATE, {\r\n        uid: session.get().userId,\r\n        prov_id: provider.id,\r\n        status: provider.checked ? true : false\r\n      }, session.authHeaders()).then((res) => {\r\n          console.log(res);\r\n        }).catch((err) => {\r\n          session.onUpdate();\r\n          console.error(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  shouldRedirect = () => {\r\n    request.get2(request.routes.API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS, {\r\n      uid: session.get().userId,\r\n      skip: 0,\r\n      count: 10\r\n    }, session.authHeaders()).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({redirectComponent: res.data.length > 0 ? <Redirect to=\"/feed\" /> : \"\"});\r\n      }).catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RedirectIfNeeded></RedirectIfNeeded>\r\n        {this.state.redirectComponent}\r\n        <div className=\"tab-custom-container\">\r\n          <div className=\"setup-title\">\r\n            Looks like you're not subscribed to any news provider<br/>Select some, and you'll see news from them in your feed\r\n          </div>\r\n          <div id=\"preferences-setup-container\">\r\n            <Form id=\"preferences-setup-search\">\r\n              <Form.Control type=\"text\" placeholder=\"Search...\" onChange={this.handleSearchChange} onKeyPress={this.handleSearchKeyPress} />\r\n              <Button id=\"preferences-setup-search-button\" variant=\"primary\" onClick={this.handleSearch}>\r\n                Search\r\n              </Button>\r\n            </Form>\r\n            {\r\n              this.state.provider.list.length > 0 ?\r\n                this.state.provider.list.map((provider, index) => {\r\n                  return <ProviderPreference {...provider} onChange={() => {\r\n                      this.state.provider.list[index].checked = !this.state.provider.list[index].checked;\r\n\r\n                      this.setState();\r\n                      this.forceUpdate();\r\n                  }} checked={provider.checked ? true : false} />\r\n                }) :\r\n                <div id=\"setup-preferences-loading\">Loading...</div>\r\n            }\r\n            <Pagination id=\"setup-preferences-pagination\">\r\n              <Pagination.First onClick={this.handlePaginationFactory(1)} />\r\n              <Pagination.Prev onClick={this.handlePaginationFactory(this.state.pagination.index - 1)} />\r\n\r\n              {\r\n                this.state.pagination.index > PAGINATION_VISIBLE_COUNT ?\r\n                <React.Fragment>\r\n                  <Pagination.Item onClick={this.handlePaginationFactory(1)}>{1}</Pagination.Item>\r\n                  <Pagination.Ellipsis disabled/>\r\n                </React.Fragment> :\r\n                  \"\"\r\n              }\r\n\r\n              {\r\n                (() => {\r\n                  let list = [];\r\n\r\n                  for(let i = this.state.pagination.index - 1; i >= 1 && i >= this.state.pagination.index - ((PAGINATION_VISIBLE_COUNT - 1) / 2); --i) {\r\n                    list.push(<Pagination.Item onClick={this.handlePaginationFactory(i)}>{i}</Pagination.Item>);\r\n                  }\r\n\r\n                  return list;\r\n                })()\r\n              }\r\n\r\n              {\r\n                <Pagination.Item active onClick={this.handlePaginationFactory(this.state.pagination.index)}>{this.state.pagination.index}</Pagination.Item>\r\n              }\r\n\r\n              {\r\n                (() => {\r\n                  let list = [];\r\n\r\n                  for(let i = this.state.pagination.index + 1; i <= this.state.pagination.count && i <= this.state.pagination.index + ((PAGINATION_VISIBLE_COUNT - 1) / 2); ++i) {\r\n                    list.push(<Pagination.Item onClick={this.handlePaginationFactory(i)}>{i}</Pagination.Item>);\r\n                  }\r\n\r\n                  return list;\r\n                })()\r\n              }\r\n\r\n              {\r\n                Math.max(this.state.pagination.index + 1, 3) < this.state.pagination.count ?\r\n                  <React.Fragment>\r\n                    <Pagination.Ellipsis disabled/>\r\n                    <Pagination.Item onClick={this.handlePaginationFactory(this.state.pagination.count)}>{this.state.pagination.count}</Pagination.Item>\r\n                  </React.Fragment> :\r\n                  \"\"\r\n              }\r\n\r\n              <Pagination.Next onClick={this.handlePaginationFactory(this.state.pagination.index + 1)} />\r\n              <Pagination.Last onClick={this.handlePaginationFactory(this.state.pagination.count)} />\r\n            </Pagination>\r\n            <LinkContainer to=\"/feed\">\r\n              <Button id=\"setup-save-btn\" onClick={this.handleSaveSettings}>\r\n                Save setup\r\n              </Button>\r\n            </LinkContainer>\r\n          </div>\r\n        </div>\r\n        <CommonFooter fixed />\r\n        <br/><br/><br/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageSetup;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport session from \"../../util/session\";\r\n\r\nclass Auth extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    if(!session.isLoaded()) {\r\n      return \"\";\r\n    }\r\n    return session.isReady() ? this.props.children : <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport PageLanding from \"./pages/PageLanding\";\r\nimport PageFeed from \"./pages/PageFeed\";\r\nimport PageProfile from \"./pages/PageProfile\";\r\nimport PageProfileProvider from \"./pages/PageProfileProvider\";\r\nimport PageSettings from \"./pages/PageSettings\";\r\nimport PageFAQ from \"./pages/PageFAQ\";\r\nimport PageSetup from \"./pages/PageSetup\";\r\n\r\nimport Auth from \"./utility/Auth\";\r\n\r\nimport session from \"../util/session.js\";\r\n\r\nclass App extends Component {\r\n  state = { /*dummy: false*/ };\r\n  constructor() {\r\n    super();\r\n    //await session.load();\r\n    /*Session.getFromCookies();\r\n    Session.onUpdate = this.handleSessionUpdate;*/\r\n    session.onUpdate = () => {\r\n      try {\r\n        this.forceUpdate();\r\n      } catch(ex) {\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await session.load();\r\n    this.forceUpdate();\r\n  }\r\n\r\n  /*handleSessionUpdate = () => {\r\n    this.setState({ dummy: !this.state.dummy });\r\n  };*/\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={PageLanding} />\r\n          <Route exact path=\"/faq\" component={PageFAQ} />\r\n\r\n          <Auth>\r\n            <React.Fragment>\r\n              <Switch>\r\n                <Route exact path=\"/feed\" component={PageFeed} />\r\n\r\n                <Route exact path=\"/profile\" component={PageProfile} />\r\n\r\n                <Route exact path=\"/settings\" component={PageSettings} />\r\n\r\n                <Route exact path=\"/setup\" component={PageSetup} />\r\n\r\n                <Route exact path=\"/:providerId\" component={PageProfileProvider} />\r\n              </Switch>\r\n            </React.Fragment>\r\n          </Auth>\r\n\r\n          \r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/style.scss';\r\nimport App from './components/App';\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider\r\n      domain=\"gmatei.eu.auth0.com\"\r\n      clientId=\"OzQArkLiVElk6NOvIthKWFmQmeyxZZBI\"\r\n      redirectUri={window.location.origin}\r\n      audience=\"https://gmatei.eu.auth0.com/api/v2/\"\r\n      scope=\"read:messages\"\r\n    >\r\n    <App />\r\n    </Auth0Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}