{"version":3,"sources":["components/common/CommonFooter.jsx","components/utility/Animation-btn.jsx","components/utility/LoginForm.jsx","components/utility/RegisterForm.jsx","util/helper.js","util/request.js","util/session.js","components/pages/PageLanding.jsx","components/utility/Logout.jsx","components/utility/ProviderPreference.jsx","components/utility/RedirectIfNeeded.jsx","components/utility/SearchBar.jsx","components/common/CommonNavbar.jsx","components/common/CommonPost.jsx","components/pages/PageFeed.jsx","components/pages/PageProfile.jsx","components/pages/PageProfileProvider.jsx","components/common/JustUserPicture.jsx","components/pages/PageSettings.jsx","components/utility/FAQ_Question.jsx","components/pages/PageFAQ.jsx","components/pages/PageSetup.jsx","components/utility/Auth.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["CommonFooter","props","state","showFAQ","Fragment","className","this","fixed","href","to","Button","variant","size","Component","LoginForm","username","password","id","Form","Group","controlId","Control","type","placeholder","onChange","e","setState","target","value","onClick","onSubmit","RegisterForm","email","confirmPassword","left","right","endsWith","startsWith","substring","routes","API_URL","API_URL2","API_PROVIDER","API_POST","API_USER","API_PREFERENCES","get","path","data","axios","helper","params","post","put","delete","get2","headers","method","url","post2","qs","stringify","post2json","delete2","put2","getUrl","postUrl","putUrl","cookies","Cookies","session","ready","loaded","userId","token","avatar","bio","onUpdate","initSession","a","request","API_USER_GET_BY_ID","res","avatarUrl","console","error","load","login","user","pass","log","API_USER_LOGIN","user_id","set","Promise","resolve","logout","API_USER_LOGOUT","remove","register","API_USER_REGISTER","passwordHash","authHeaders","isReady","isLoaded","setUpdate","handler","PageLanding","item","isLogin","handleOnLoginSubmit","forceUpdate","alert","handleOnRegisterSubmit","window","location","reload","componentDidMount","handleShowLogin","newItem","handleShowRegister","src","alt","width","height","block","Logout","NavDropdown","Item","ProviderPreference","name","credibility","Check","label","checked","RedirectIfNeeded","SearchBar","provider","count","list","query","searchQuery","pagination","index","sessionInterval","redirectComponent","updateProviders","length","API_PROVIDER_SEARCH","API_PROVIDER_GET_INTERVAL","skip","Math","min","then","catch","err","updateProviderCount","API_PROVIDER_SEARCH_COUNT","API_PROVIDER_COUNT","providerCount","ceil","handleSearchChange","event","handleSearch","onKeyPress","handleSearchKeyPress","CommonNavbar","Navbar","bg","expand","Brand","authenticated","withSearch","Collapse","Nav","title","CommonPost","fake","thumbnail","description","toString","PageFeed","posts","postIndex","loadPosts","addEventListener","listenToScroll","scrollHeight","scrollTop","clientHeight","API_POST_GET_INTERVAL","concat","map","p","sourceUrl","score","date","postDate","removeEventListener","key","PageProfile","PageProfileProvider","providerReady","providerValid","API_PROVIDER_BY_ID","provider_id","match","providerId","JustUserPicture","PageSettings","useAuth0","getAccessTokenSilently","useState","setProvider","setQuery","setSearchQuery","setPagination","React","updateState","useCallback","showModal","setShowModal","imageUrl","setImageUrl","passwordUser","setPasswordUser","Bio","setBio","initialized","setInitialized","useEffect","setInterval","clearInterval","handleBioChange","API_USER_UPDATE","updateProviderChecked","providerElem","API_PREFERENCES_GET","uid","prov_id","trim","toLowerCase","handlePaginationFactory","i","handleModalClose","handleImageChange","handlePasswordChange","Tabs","defaultActiveKey","Tab","eventKey","Modal","show","onHide","Header","closeButton","Title","Body","preventDefault","Footer","as","rows","Pagination","First","Prev","Ellipsis","disabled","push","active","max","Next","Last","API_PREFERENCES_UPDATE","status","FAQ_Question","Card","Accordion","Toggle","question","answer","PageFAQ","questions","PageSetup","shouldRedirect","handleSaveSettings","API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS","Auth","children","App","ex","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","domain","clientId","redirectUri","origin","audience","scope","document","getElementById"],"mappings":"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","file":"static/js/main.82a282b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport '../../style/style.scss';\r\n\r\nclass CommonFooter extends Component {\r\n    state = { showFAQ: true };\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state.showFAQ = props.showFAQ ?? true;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n            <footer className={this.props.fixed ? \"footer-fixed\" : \"\"}>\r\n                <div className=\"footer-container\">\r\n                    <div>\r\n                        Contact:\r\n                        <a className=\"footer-contact-label\" href=\"https://github.com/orgs/Fake-News-Detection-2B5/teams/front-end\">\r\n                            Our Github\r\n                        </a>\r\n                        &#124;\r\n                        <a className=\"footer-contact-label\" href=\"https://github.com/orgs/Fake-News-Detection-2B5/teams/front-end\">\r\n                            Our Github\r\n                        </a>\r\n                    </div>\r\n                    {\r\n                        this.state.showFAQ ? \r\n                        <LinkContainer to=\"/faq\">\r\n                            <Button variant=\"primary\" size=\"sm\">\r\n                                FAQ\r\n                            </Button>\r\n                        </LinkContainer>\r\n                        :\r\n                        <LinkContainer to=\"/\">\r\n                            <Button variant=\"primary\" size=\"sm\">\r\n                                Home\r\n                            </Button>\r\n                        </LinkContainer>\r\n                    }\r\n                </div>\r\n            </footer>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default CommonFooter;","import React, { Component } from \"react\";\r\n\r\nclass Animation extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return <div id=\"fancy-btn\"></div>;\r\n  }\r\n}\r\n\r\nexport default Animation;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport \"../../style/navbar.scss\";\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <panel-content>\r\n          <div id=\"fullview\">\r\n            <panel-content>\r\n              <phantom-div />\r\n              <Form.Group controlId=\"formEmail\" id=\"inputfullwidth\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter username\"\r\n                  onChange={(e) => {\r\n                    this.setState({username: e.target.value});\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formPassword\" id=\"inputfullwidth\">\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => {\r\n                  this.setState({password: e.target.value});\r\n              }}/>\r\n              </Form.Group>\r\n              <phantom-div />\r\n              <Button\r\n                variant=\"primary\"\r\n                id=\"fixed-button\"\r\n                size=\"lg\"\r\n                onClick={() => {\r\n                    this.props.onSubmit(this.state.username, this.state.password);\r\n                }}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </panel-content>\r\n          </div>\r\n        </panel-content>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button, Card, Accordion } from \"react-bootstrap\";\r\n\r\nimport \"../../style/navbar.scss\";\r\n\r\nclass RegisterForm extends Component {\r\n  state = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"fullview\">\r\n          <panel-content>\r\n            <Form.Group controlId=\"formUsernameRegister\" id=\"inputfullwidth\">\r\n              <Form.Control type=\"username\" placeholder=\"Enter username\" onChange={(e) => {\r\n                  this.setState({username: e.target.value});\r\n              }}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formEmailRegister\" id=\"inputfullwidth\">\r\n              <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={(e) => {\r\n                  this.setState({email: e.target.value});\r\n              }}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPasswordRegister\" id=\"inputfullwidth\">\r\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e) => {\r\n                  this.setState({password: e.target.value});\r\n              }}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPasswordConfirm\" id=\"inputfullwidth\">\r\n              <Form.Control type=\"password\" placeholder=\"Confirm Password\" onChange={(e) => {\r\n                  this.setState({confirmPassword: e.target.value});\r\n              }}/>\r\n            </Form.Group>\r\n            <Button id=\"fixed-button\" variant=\"primary\" size=\"lg\" onClick={() => {\r\n              this.props.onSubmit(this.state.username, this.state.email, this.state.password, this.state.confirmPassword);\r\n            }}>\r\n              Submit\r\n            </Button>\r\n          </panel-content>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;","export default {\r\n    pathJoin: (left, right) => {\r\n        if(left.endsWith('/')) {\r\n            if(right.startsWith('/')) {\r\n                return left + right.substring(1);\r\n            } else {\r\n                return left + right;\r\n            }\r\n        } else {\r\n            if(right.startsWith('/')) {\r\n                return left + right;\r\n            } else {\r\n                return left + '/' + right;\r\n            }\r\n        }\r\n    }\r\n}","import axios from 'axios';\r\nimport qs from \"qs\";\r\nimport helper from './helper.js';\r\n\r\nconst routes = {\r\n    API_URL: 'https://fake-news-zuul-gateway.herokuapp.com/fake-database',\r\n    API_URL2: 'https://fake-database-fe-support.herokuapp.com'\r\n};\r\n\r\nroutes['API_PROVIDER'] = '/provider';\r\nroutes['API_PROVIDER_BY_ID'] = `${routes.API_PROVIDER}/getById`;\r\nroutes['API_PROVIDER_COUNT'] = `${routes.API_PROVIDER}/getCount`;\r\nroutes['API_PROVIDER_GET_INTERVAL'] = `${routes.API_PROVIDER}/getInterval`;\r\nroutes['API_PROVIDER_SEARCH_COUNT'] = `${routes.API_PROVIDER}/searchCount`;\r\nroutes['API_PROVIDER_SEARCH'] = `${routes.API_PROVIDER}/search`;\r\nroutes['API_PROVIDER_GET_BY_NAME'] = `${routes.API_PROVIDER}/getByName`;\r\n\r\nroutes['API_POST'] = '/post';\r\nroutes['API_POST_GET_INTERVAL'] = `${routes.API_POST}/getInterval`;\r\n\r\nroutes['API_USER'] = '/user';\r\nroutes['API_USER_LOGIN'] = `${routes.API_USER}/login`\r\nroutes['API_USER_LOGOUT'] = `${routes.API_USER}/logout`\r\nroutes['API_USER_REGISTER'] = `${routes.API_USER}/register`;\r\nroutes['API_USER_GET_BY_ID'] = `${routes.API_USER}/get`;\r\nroutes['API_USER_UPDATE'] = `${routes.API_USER}/update`;\r\n\r\nroutes['API_PREFERENCES'] = '/preferences';\r\nroutes['API_PREFERENCES_GET'] = `${routes.API_PREFERENCES}/isSubscribed`;\r\nroutes['API_PREFERENCES_UPDATE'] = `${routes.API_PREFERENCES}/updateSubscriptionStatus`;\r\nroutes['API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS'] = `${routes.API_PREFERENCES}/getByUserId`;\r\n\r\nexport default {\r\n    routes: routes,\r\n    get: (path, data) => {\r\n        return axios.get(helper.pathJoin(routes.API_URL, path), { params: data });\r\n    },\r\n    post: (path, data) => {\r\n        return axios.post(helper.pathJoin(routes.API_URL, path), data);\r\n    },\r\n    put: (path, data) => {\r\n        return axios.put(helper.pathJoin(routes.API_URL, path), data);\r\n    },\r\n    delete: (path, data) => {\r\n        return axios.delete(helper.pathJoin(routes.API_URL, path), data);\r\n    },\r\n    get2: (path, data, headers) => {\r\n        return axios({\r\n            method: \"get\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            params: data,\r\n            headers: headers ?? {}\r\n        });\r\n    },\r\n    post2: (path, data, headers) => {\r\n        return axios({\r\n            method: \"post\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            data: qs.stringify(data),\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded',\r\n                ...headers\r\n            }\r\n        })\r\n    },\r\n    post2json: (path, data, headers) => {\r\n        return axios({\r\n            method: \"post\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            data: data,\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                ...headers\r\n            }\r\n        })\r\n    },\r\n    delete2: (path, data, headers) => {\r\n        return axios({\r\n            method: \"delete\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            data: data,\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded',\r\n                ...headers\r\n            }\r\n        })\r\n    },\r\n    put2: (path, data, headers) => {\r\n        return axios({\r\n            method: \"put\",\r\n            url: helper.pathJoin(routes.API_URL2, path),\r\n            data: qs.stringify(data),\r\n            headers: {\r\n                'content-type': 'application/x-www-form-urlencoded',\r\n                ...headers\r\n            }\r\n        })\r\n        //return axios.put(fullPath, data);\r\n    },\r\n    getUrl: (url, data) => {\r\n        return axios.get(url, { params: data });\r\n    },\r\n    postUrl: (url, data) => {\r\n        return axios.post(url, data);\r\n    },\r\n    putUrl: (url, data) => {\r\n        return axios.put(url, data);\r\n    }\r\n};","import request from \"./request.js\"\r\n\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nvar session = {\r\n    ready: false,\r\n    loaded: false,\r\n\r\n    data: {\r\n        userId: null,\r\n        token: null,\r\n        username: null,\r\n        avatar: null,\r\n        bio: null,\r\n        email: null\r\n    },\r\n\r\n    onUpdate: null,\r\n\r\n    headers: () => ({\r\n        \"X-Auth-User\": session.data.userId,\r\n        \"X-Auth-Token\": session.data.token\r\n    })\r\n};\r\n\r\nasync function initSession() {\r\n    if(!session.ready) {\r\n        try {\r\n            let res = await request.get2(request.routes.API_USER_GET_BY_ID, {\r\n                id: session.data.userId\r\n            }, session.headers());\r\n\r\n            session.data.username = res.data.username;\r\n            session.data.avatar = res.data.avatarUrl;\r\n            session.data.bio = res.data.bio;\r\n            session.data.email = res.data.email;\r\n\r\n            session.ready = true;\r\n        } catch(err) {\r\n            console.error(err);\r\n            session.ready = false;\r\n        }\r\n    }\r\n}\r\n\r\nexport default {\r\n    load: async () => {\r\n        session.data.userId = cookies.get(\"user_id\", { path: \"/\" });\r\n        session.data.token = cookies.get(\"token\", { path: \"/\" });\r\n\r\n        try {\r\n            session.data.userId = cookies.get(\"user_id\", { path: \"/\" });\r\n            session.data.token = cookies.get(\"token\", { path: \"/\" });\r\n\r\n            if(session.data.userId && session.data.token)\r\n                await initSession();\r\n\r\n            session.loaded = true;\r\n        } catch(ex) {\r\n            session.loaded = true;\r\n        }\r\n    },\r\n    login: async (user, pass) => {\r\n        try {\r\n            console.log({\r\n                username: user,\r\n                password: pass\r\n            });\r\n            let res = await request.post2(request.routes.API_USER_LOGIN, {\r\n                username: user,\r\n                password: pass\r\n            });\r\n            \r\n            session.data.userId = res.data.user_id;\r\n            session.data.token = res.data.token;\r\n\r\n            cookies.set(\"user_id\", session.data.userId, { path: \"/\" });\r\n            cookies.set(\"token\", session.data.token, { path: \"/\" });\r\n\r\n            await initSession();\r\n\r\n            return Promise.resolve(true);\r\n        } catch(err) {\r\n            console.error(err);\r\n\r\n            return Promise.resolve(false);\r\n        };\r\n    },\r\n    logout: async () => {\r\n        try {\r\n            let res = await request.delete2(request.routes.API_USER_LOGOUT, { }, session.headers());\r\n\r\n            cookies.remove(\"user_id\", { path: \"/\" });\r\n            cookies.remove(\"token\", { path: \"/\" });\r\n\r\n            session.ready = false;\r\n\r\n            return Promise.resolve(true);\r\n        } catch(err) {\r\n            console.error(err);\r\n            return Promise.resolve(false);\r\n        };\r\n    },\r\n    register: async (username, email, pass) => {\r\n        try {\r\n            let res = await request.post2json(request.routes.API_USER_REGISTER, {\r\n                username: username,\r\n                passwordHash: pass,\r\n                avatarUrl: \"https://www.kindpng.com/picc/m/21-214439_free-high-quality-person-icon-default-profile-picture.png\",\r\n                bio: \"I am \" + username + \" and this is my bio. Change me!\",\r\n                email: email\r\n            });\r\n            \r\n            // session.data.userId = res.data.user_id;\r\n            // session.data.token = res.data.token;\r\n\r\n            // cookies.set(\"user_id\", session.data.userId, { path: \"/\" });\r\n            // cookies.set(\"token\", session.data.token, { path: \"/\" });\r\n\r\n            return Promise.resolve(true);\r\n        } catch(err) {\r\n            console.error(err);\r\n            return Promise.resolve(false);\r\n        };\r\n    },\r\n    authHeaders: () => session.headers(),\r\n    isReady: () => session.ready,\r\n    isLoaded: () => session.loaded,\r\n    onUpdate: () => session.onUpdate(),\r\n    setUpdate: (handler) => session.onUpdate = handler,\r\n    get: () => session.data\r\n}","import React, { useState, Component } from \"react\";\r\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\r\n\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport Animation from \"../utility/Animation-btn.jsx\";\r\nimport Auth0Btn from \"../utility/Auth0Btn.jsx\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport '../../style/style.scss';\r\nimport { render } from \"@testing-library/react\";\r\n\r\nimport LoginForm from \"../utility/LoginForm.jsx\";\r\nimport RegisterForm from \"../utility/RegisterForm.jsx\";\r\n\r\nimport request from \"../../util/request\";\r\nimport session from \"../../util/session\";\r\n\r\nclass PageLanding extends Component {\r\n  state = {\r\n    item: null,\r\n    isLogin: true\r\n  };\r\n\r\n  handleOnLoginSubmit = async (username, password) => {\r\n    if(await session.login(username, password)) {\r\n      this.setState();\r\n      this.forceUpdate();\r\n    } else alert(\"Invalid username/password\");\r\n  }\r\n\r\n  handleOnRegisterSubmit = async (username, email, password, confirmPassword) => {\r\n    if(password !== confirmPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    if(await session.register(username, email, password)) {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({item: <LoginForm onSubmit={this.handleOnLoginSubmit} />});\r\n  }\r\n\r\n  handleShowLogin = () => {\r\n    const newItem = <LoginForm onSubmit={this.handleOnLoginSubmit} />;\r\n    this.setState({ item: newItem, isLogin: true });\r\n    console.log(\"Updating!\");\r\n  }\r\n\r\n  handleShowRegister = () => {\r\n    const newItem = <RegisterForm onSubmit={this.handleOnRegisterSubmit} />;\r\n    this.setState({ item: newItem, isLogin: false });\r\n    console.log(\"Updating!\");\r\n  };\r\n\r\n  render() {\r\n    if(!session.isLoaded())\r\n      return \"\";\r\n      \r\n    if(session.isReady())\r\n      return <Redirect to=\"/feed\"/>;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <grid-template>\r\n        <grid-image>\r\n          <img\r\n            src={\"../../../res/img/landingpage.svg\"}\r\n            alt=\"React Logo\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          />\r\n        </grid-image>\r\n        <panel>\r\n            <panelGrid>\r\n              <btn-login>\r\n                <Button\r\n                  id=\"button-radius-left\"\r\n                  onClick={this.handleShowLogin}\r\n                  type=\"button\"\r\n                  variant={this.state.isLogin ? \"success\" : \"secondary\"}\r\n                  size=\"lg\"\r\n                  block\r\n                >\r\n                  Login\r\n                </Button>\r\n              </btn-login>\r\n              <btn-register>\r\n                <Button\r\n                  id=\"button-radius-right\"\r\n                  onClick={this.handleShowRegister}\r\n                  type=\"button\"\r\n                  variant={this.state.isLogin ? \"secondary\" : \"success\"}\r\n                  size=\"lg\"\r\n                  block\r\n                >\r\n                  Register\r\n                </Button>\r\n              </btn-register>\r\n              <panel-content-wrapper>\r\n                {this.state.item}\r\n              </panel-content-wrapper>\r\n            </panelGrid>\r\n          </panel>\r\n      </grid-template>\r\n      <CommonFooter fixed />\r\n    </React.Fragment>);\r\n  }\r\n}\r\n\r\nexport default PageLanding;\r\n","import React , { Component } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport session from \"../../util/session\";\r\n\r\nclass Logout extends Component {\r\n  \r\n  render() {\r\n    return (\r\n      session.isReady() && (\r\n        <NavDropdown.Item\r\n          onClick={async () => {\r\n            if(await session.logout()) {\r\n              window.location = \"/\";\r\n            }\r\n            else {\r\n              alert(\"Error at logout\");\r\n            }\r\n          }}\r\n        >\r\n          Logout\r\n        </NavDropdown.Item>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, NavDropdown, Form } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nclass ProviderPreference extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"preference-provider\">\r\n          <img\r\n            className=\"photo-border\"\r\n            src={this.props.avatar}\r\n            width=\"128\"\r\n            height=\"128\"\r\n          />\r\n          <div className=\"preference-provider-info\">\r\n            <p> {this.props.name} </p>\r\n            <p> Credibility: {this.props.credibility}% </p>\r\n            \r\n          </div>\r\n          <Form className=\"ml-auto subscribe-form\">\r\n            <div key={`provider-checkbox` + this.props.name} className=\"mb-3\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id={`provider-checkbox` + this.props.name}\r\n                label={`Subscribed`}\r\n                onChange={() => {this.props.onChange();}}\r\n                checked={this.props.checked}\r\n              />\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProviderPreference;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { wait } from \"@testing-library/dom\";\r\n\r\nimport session from \"../../util/session\"\r\n\r\nfunction RedirectIfNeeded() {\r\n  if(!session.isLoaded() || session.isReady()) {\r\n    return (<React.Fragment />);\r\n  }\r\n  else {\r\n    return (\r\n      <Redirect to=\"/\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RedirectIfNeeded;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Tabs, Tab, Form, Pagination } from \"react-bootstrap\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport '../../style/style.scss';\r\nimport ProviderPreference from \"../utility/ProviderPreference.jsx\";\r\n\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport request from \"../../util/request.js\";\r\nimport session from \"../../util/session.js\";\r\n\r\nconst PAGINATION_VISIBLE_COUNT = 6;\r\nconst PAGINATION_PROVIDERS_PER_PAGE = 6;\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        provider: {\r\n            count: 0,\r\n            list: []\r\n        },\r\n        query: \"\",       // chanes when pressing search\r\n        searchQuery: \"\", // changes with key presses\r\n        pagination: {\r\n            index: 1,\r\n            count: 0\r\n        },\r\n        sessionInterval: null,\r\n        redirectComponent: null\r\n    };\r\n\r\n    updateProviders = () => {\r\n        request.get(this.state.searchQuery.length > 0 ? request.routes.API_PROVIDER_SEARCH : request.routes.API_PROVIDER_GET_INTERVAL, {\r\n            skip: PAGINATION_PROVIDERS_PER_PAGE * (this.state.pagination.index - 1),\r\n            count: Math.min(PAGINATION_PROVIDERS_PER_PAGE, this.state.provider.count - PAGINATION_PROVIDERS_PER_PAGE * (this.state.pagination.index - 1)),\r\n            query: this.state.query\r\n        }).then((res) => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                provider: {\r\n                    ...this.state.provider,\r\n                    list: res.data\r\n                }\r\n            })\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    updateProviderCount = () => {\r\n        request.get(this.state.searchQuery.length > 0 ? request.routes.API_PROVIDER_SEARCH_COUNT : request.routes.API_PROVIDER_COUNT, {\r\n            query: this.state.query\r\n        }).then((res) => {\r\n            let providerCount = res.data.count;\r\n\r\n            this.setState({\r\n                provider: {\r\n                    ...this.state.provider,\r\n                    count: providerCount\r\n                },\r\n                pagination: {\r\n                    ...this.state.pagination,\r\n                    count: (Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE))\r\n                }\r\n            });\r\n\r\n            this.updateProviders();\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    handleSearchChange = (event) => {\r\n        this.setState({ searchQuery: event.target.value });\r\n    }\r\n\r\n    handleSearch = () => {\r\n        this.setState({\r\n            query: this.state.searchQuery\r\n        }, () => {\r\n            this.updateProviderCount();\r\n\r\n            console.log(`Search: ${this.state.query}`);\r\n\r\n            this.updateProviderCount();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"navbar-parent\">\r\n                    <Form id=\"navbar-search\">\r\n                        <Form.Control type=\"text\" placeholder=\"Search...\" onChange={this.handleSearchChange} onKeyPress={this.handleSearchKeyPress} />\r\n                        <Button id=\"preferences-setup-search-button\" variant=\"primary\" onClick={this.handleSearch}>\r\n                            Search\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Logout from \"../utility/Logout.jsx\";\r\nimport SearchBar from \"../utility/SearchBar.jsx\";\r\nimport '../../style/style.scss';\r\n\r\nimport session from \"../../util/session.js\";\r\n\r\nclass CommonNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar\r\n          id=\"navbar\"\r\n          bg=\"white\"\r\n          expand=\"sm\"\r\n          className=\"sticky-top border-bottom\"\r\n        >\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>\r\n              <img\r\n                className=\"image-brand rounded-img shadow-img\"\r\n                width=\"32\"\r\n                height=\"32\"\r\n                src={process.env.PUBLIC_URL + \"/res/img/logo512.png\"}\r\n                alt=\"Brand\"\r\n              />\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          {this.props.authenticated ? (\r\n            this.props.withSearch ? (\r\n              <React.Fragment>\r\n                \r\n                <SearchBar />\r\n              \r\n                <Navbar.Collapse>\r\n                  <Nav className=\"ml-auto\">\r\n                    <NavDropdown\r\n                      title={\r\n                        session.isReady() ?\r\n                          <React.Fragment>\r\n                            <img\r\n                              className=\"image-brand\"\r\n                              width=\"32\"\r\n                              height=\"32\"\r\n                              src={session.get().avatar}\r\n                              alt={session.get().username}\r\n                            />\r\n                            <span id=\"username\">{session.get().username}</span>\r\n                          </React.Fragment>\r\n                          : \"\"\r\n                      }\r\n                    >\r\n                      <LinkContainer to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <LinkContainer to=\"/settings\">\r\n                        <NavDropdown.Item>Settings</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <Logout />\r\n                    </NavDropdown>\r\n                  </Nav>\r\n                </Navbar.Collapse>\r\n                </React.Fragment>\r\n            ) : (\r\n              <Navbar.Collapse>\r\n                <Nav className=\"ml-auto\">\r\n                  <NavDropdown\r\n                    title={\r\n                      session.isReady() ?\r\n                        <React.Fragment>\r\n                          <img\r\n                            className=\"image-brand\"\r\n                            width=\"32\"\r\n                            height=\"32\"\r\n                            src={session.get().avatar}\r\n                            alt={session.get().username}\r\n                          />\r\n                          <span id=\"username\">{session.get().username}</span>\r\n                        </React.Fragment>\r\n                        : \"\"\r\n                    }\r\n                  >\r\n                    <LinkContainer to=\"/profile\">\r\n                      <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to=\"/settings\">\r\n                      <NavDropdown.Item>Settings</NavDropdown.Item>\r\n                    </LinkContainer>\r\n\r\n                    <Logout />\r\n                  </NavDropdown>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Navbar>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CommonNavbar;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nclass CommonPost extends Component {\r\n    state = { };\r\n  \r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n            <div className=\"post-container\">\r\n                <a className=\"post-readmore\" href={this.props.url} target=\"_blank\">\r\n                    [read more]\r\n                </a>\r\n                <div className=\"post-header\">\r\n                    <LinkContainer to=\"/profile_provider\">\r\n                        <div className=\"pointer\">\r\n                            <img className=\"post-provider-avatar\" src={this.props.provider.avatar} alt=\"Avatar\" />\r\n                            <span className=\"post-provider-name\">\r\n                                {this.props.provider.name}\r\n                            </span>\r\n                        </div>\r\n                    </LinkContainer>\r\n                    <div>\r\n                        {/* <LinkContainer to=\"#\">\r\n                            <a className=\"post-feedback-text text-secondary\">\r\n                                (feedback)\r\n                            </a>\r\n                        </LinkContainer> */}\r\n                        <span className={`post-credibility-${this.props.fake === \"true\" ? 'good' : 'bad'}`}>\r\n                            {this.props.fake}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"post-body\">\r\n                    <a href={this.props.url} target=\"_blank\">\r\n                        <img className=\"post-thumbnail\" src={this.props.title} alt=\"Thumbnail\" />\r\n                    </a>\r\n                    <a className=\"post-title\" href={this.props.url} target=\"_blank\">\r\n                        {this.props.thumbnail}\r\n                    </a>\r\n                    <div className=\"post-description text-secondary\">\r\n                        {this.props.description.toString().substring(0, 300) + \"...\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default CommonPost;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport CommonPost from \"../common/CommonPost.jsx\";\r\nimport request from \"../../util/request.js\";\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport session from \"../../util/session\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nconst POST_INITIAL_COUNT = 10;\r\nconst POST_LOAD_COUNT = 5;\r\n\r\nclass PageFeed extends Component {\r\n  state = {\r\n    posts: [],\r\n    postIndex: 0,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.loadPosts(POST_INITIAL_COUNT);\r\n    window.addEventListener(\"scroll\", this.listenToScroll, true);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.listenToScroll);\r\n  }\r\n\r\n  listenToScroll = (e) => {\r\n    if (e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight) {\r\n      this.loadPosts(POST_LOAD_COUNT);\r\n    }\r\n  };\r\n\r\n  loadPosts = (count) => {\r\n    request\r\n      .get2(request.routes.API_POST_GET_INTERVAL, {\r\n        skip: this.state.postIndex,\r\n        count: count,\r\n      }, session.authHeaders())\r\n      .then((res) => {\r\n        this.setState({\r\n          posts: this.state.posts.concat(\r\n            res.data.map((p) => {\r\n              return {\r\n                provider: {\r\n                  avatar:\r\n                    \"http://www.digi24.ro/static/theme-repo/bin/images/digi24-logo.png\",\r\n                  name: \"Digi24\",\r\n                },\r\n                id: p.id,\r\n                title: p.title,\r\n                thumbnail: p.thumbnail,\r\n                description: p.description,\r\n                url: p.sourceUrl,\r\n                fake: p.score,\r\n                date: p.postDate,\r\n              };\r\n            })\r\n          ),\r\n          postIndex: this.state.postIndex + count,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RedirectIfNeeded></RedirectIfNeeded>\r\n        <CommonNavbar authenticated withSearch />\r\n        <main id=\"main-feed\">\r\n          {this.state.posts.map((post) => {\r\n            return <CommonPost {...post} key={`post-${post.id}`} />;\r\n          })}\r\n        </main>\r\n        <CommonFooter fixed />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFeed;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport { Profile } from \"../utility/Profile\";\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport session from \"../../util/session.js\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nclass PageProfile extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RedirectIfNeeded></RedirectIfNeeded>\r\n        <CommonNavbar authenticated />\r\n        <div id=\"profile-container\">\r\n          <div id=\"profile-header\">\r\n            <img src={session.get().avatar} alt={session.get().username} id=\"profile-avatar-center\"/>\r\n            <div id=\"profile-username\">\r\n              <h1>{session.get().username}</h1>\r\n            </div>\r\n          </div>\r\n          <div id=\"bio-container-profile\" className=\"justify-content-center\">\r\n            <div id=\"bio-text-container\">{session.get().bio}</div>\r\n          </div>\r\n        </div>\r\n        <CommonFooter fixed />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageProfile;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport CommonPost   from \"../common/CommonPost.jsx\";\r\nimport request from \"../../util/request.js\";\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport session from \"../../util/session\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nclass PageProfileProvider extends Component {\r\n  state = {\r\n    providerReady: false,\r\n    provider: {},\r\n    posts: [],\r\n    providerValid: true\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    request.get2(request.routes.API_PROVIDER_BY_ID, {\r\n      provider_id: this.props.match.params.providerId \r\n    }, session.authHeaders()).then((res) => {\r\n        this.setState({\r\n          provider: res.data,\r\n          providerValid: res.data ? true : false,\r\n          providerReady: true\r\n        });\r\n\r\n      }).catch((err) => {\r\n        console.error(err);\r\n        this.setState({\r\n          providerValid: false\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RedirectIfNeeded></RedirectIfNeeded>\r\n      {this.state.providerValid == false ? <Redirect to=\"/feed\" /> : \r\n      <React.Fragment>\r\n        <CommonNavbar authenticated />\r\n        {this.state.providerReady ? \r\n        <React.Fragment>\r\n            <div id=\"profile-container\">\r\n          <div id=\"profile-header\">\r\n            <img className=\"photo-border\" src={this.state.provider.avatar} alt=\"User avatar\" />\r\n            <div id=\"provider-profile-name-credibility\">\r\n              <h1> {this.state.provider.name}  </h1>\r\n              <h2> Credibility: {this.state.provider.credibility}% </h2>\r\n            </div>\r\n          </div>\r\n          <div id=\"bio-container-provider\" className=\"justify-content-center\">\r\n            <div id=\"bio-text-container\" >\r\n              No description\r\n                </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"horizontal-line\">\r\n\r\n        </div>\r\n\r\n        <div id=\"profile-posts\">\r\n          <main>\r\n            {this.state.posts.map(post => {\r\n              return <CommonPost {...post} />\r\n            })}\r\n          </main>\r\n        </div>\r\n        </React.Fragment> \r\n        :\r\n        \"\" \r\n      }\r\n        \r\n\r\n        <CommonFooter fixed />\r\n      </React.Fragment>\r\n    }\r\n    </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default PageProfileProvider;","import React, { Component } from \"react\";\r\n\r\nimport session from \"../../util/session\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nclass JustUserPicture extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {session.isReady() ?\r\n                <img \r\n                id=\"photo-border\"\r\n                src={session.get().avatar} alt={session.get().username}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                />\r\n                : \"Loading...\"}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JustUserPicture;","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Button, Tabs, Tab, Form, Pagination, Modal } from \"react-bootstrap\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport JustUserPicture from \"../common/JustUserPicture.jsx\";\r\n\r\nimport \"../../style/style.scss\";\r\nimport ProviderPreference from \"../utility/ProviderPreference.jsx\";\r\n\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport request from \"../../util/request.js\";\r\nimport session from \"../../util/session.js\";\r\n\r\nconst PAGINATION_VISIBLE_COUNT = 3;\r\nconst PAGINATION_PROVIDERS_PER_PAGE = 3;\r\n\r\nlet PageSettings = () => {\r\n  const { user, getAccessTokenSilently } = useAuth0();\r\n  let [provider, setProvider] = useState({ count: 0, list: [] });\r\n  let [query, setQuery] = useState(\"\");\r\n  let [searchQuery, setSearchQuery] = useState(\"\");\r\n  let [pagination, setPagination] = useState({\r\n    index: 1,\r\n    count: 0,\r\n  });\r\n  let [sessionInterval, setSessionInterval] = useState(null);\r\n  let [fileUpload, setFileUpload] = useState(null);\r\n  let [, updateState] = React.useState();\r\n  let forceUpdate = React.useCallback(() => updateState({}), []);\r\n  let [showModal, setShowModal] = useState(false);\r\n\r\n  //TEMPORAL\r\n  let [imageUrl, setImageUrl] = useState(\"\");\r\n  let [passwordUser, setPasswordUser] = useState(\"\");\r\n\r\n  let [Bio, setBio] = useState(\"\");  \r\n  let [initialized, setInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!initialized) {\r\n      setInitialized(true);\r\n      updateProviderCount();\r\n      if (!session.isReady()) {\r\n        sessionInterval = setInterval(() => {\r\n          if (session.isReady()) {\r\n            clearInterval(sessionInterval);\r\n          }\r\n        }, 10);\r\n      }\r\n    }\r\n  });\r\n\r\n  let handleBioKeyChange = (event) => {\r\n    setBio(event.target.value);\r\n  };\r\n\r\n\r\n  let handleBioChange = async () => {\r\n    console.log(passwordUser);\r\n    request\r\n      .put2(\r\n        request.routes.API_USER_UPDATE,\r\n        {\r\n          id: session.get().userId,\r\n          bio: Bio,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let updateProviders = () => {\r\n    request\r\n      .get2(\r\n        searchQuery.length > 0\r\n          ? request.routes.API_PROVIDER_SEARCH\r\n          : request.routes.API_PROVIDER_GET_INTERVAL,\r\n        {\r\n          skip: PAGINATION_PROVIDERS_PER_PAGE * (pagination.index - 1),\r\n          count: Math.min(\r\n            PAGINATION_PROVIDERS_PER_PAGE,\r\n            provider.count -\r\n              PAGINATION_PROVIDERS_PER_PAGE * (pagination.index - 1)\r\n          ),\r\n          query: query,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        setProvider({\r\n          ...provider,\r\n          list: res.data,\r\n        });\r\n        provider = {\r\n          ...provider,\r\n          list: res.data,\r\n        };\r\n        updateProviderChecked();\r\n      })\r\n\r\n      .catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let updateProviderCount = () => {\r\n    request\r\n      .get2(\r\n        searchQuery.length > 0\r\n          ? request.routes.API_PROVIDER_SEARCH_COUNT\r\n          : request.routes.API_PROVIDER_COUNT,\r\n        {\r\n          query: query,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        let providerCount = res.data.count;\r\n\r\n        setProvider({\r\n          ...provider,\r\n          count: providerCount,\r\n        });\r\n        provider = {\r\n          ...provider,\r\n          count: providerCount,\r\n        };\r\n        setPagination({\r\n          ...pagination,\r\n          count: Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE),\r\n        });\r\n\r\n        pagination = {\r\n          ...pagination,\r\n          count: Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE),\r\n        };\r\n\r\n        updateProviders();\r\n      })\r\n      .catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let updateProviderChecked = () => {\r\n    provider.list.map((providerElem, index) => {\r\n      request\r\n        .get2(\r\n          request.routes.API_PREFERENCES_GET,\r\n          {\r\n            uid: session.get().userId,\r\n            prov_id: providerElem.id,\r\n          },\r\n          session.authHeaders()\r\n        )\r\n        .then((res) => {\r\n          let checked = res.data.toString().trim().toLowerCase() === \"true\";\r\n\r\n          provider.list[index].checked = checked; //@SEE\r\n          forceUpdate();\r\n        })\r\n        .catch((err) => {\r\n          session.onUpdate();\r\n          console.error(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  let handlePaginationFactory = (i) => {\r\n    return (event) => {\r\n      if (i >= 1 && i <= pagination.count) {\r\n        setPagination({\r\n          ...pagination,\r\n          index: i,\r\n        });\r\n        pagination = {\r\n          ...pagination,\r\n          index: i,\r\n        };\r\n        updateProviders();\r\n      }\r\n    };\r\n  };\r\n\r\n  let handleSearchKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  let handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  let handleSearch = () => {\r\n    setQuery(searchQuery);\r\n    console.log(`Search: ${query}`);\r\n    updateProviderCount();\r\n  };\r\n\r\n  let handleSaveSettings = () => {\r\n    provider.list.map((provider, index) => {\r\n      request\r\n        .put2(\r\n          request.routes.API_PREFERENCES_UPDATE,\r\n          {\r\n            uid: session.get().userId,\r\n            prov_id: provider.id,\r\n            status: provider.checked ? true : false,\r\n          },\r\n          session.authHeaders()\r\n        )\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          session.onUpdate();\r\n          console.error(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  let openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  let handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  let handleImageChange = async () => {\r\n    request\r\n      .put2(\r\n        request.routes.API_USER_UPDATE,\r\n        {\r\n          id: session.get().userId,\r\n          avatar: imageUrl,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let handlePasswordChange = async () => {\r\n    console.log(passwordUser);\r\n    request\r\n      .put2(\r\n        request.routes.API_USER_UPDATE,\r\n        {\r\n          id: session.get().userId,\r\n          password: passwordUser,\r\n        },\r\n        session.authHeaders()\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let handleUrlKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleImageChange();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  let handleUrlChange = (event) => {\r\n    setImageUrl(event.target.value);\r\n  };\r\n\r\n  let handlePassKeyChange = (event) => {\r\n    console.log(passwordUser);\r\n    setPasswordUser(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <RedirectIfNeeded></RedirectIfNeeded>\r\n      <CommonNavbar authenticated />\r\n      <div id=\"settings-container\">\r\n        <Tabs defaultActiveKey=\"account\" className=\"justify-content-center\">\r\n          <Tab eventKey=\"account\" title=\"Account Settings\">\r\n            <div className=\"tab-custom-container\">\r\n              <div id=\"account-settings-container\">\r\n                <div id=\"account-container\">\r\n                  <div id=\"photo-container\" className=\"justify-content-center\">\r\n                    <div id=\"photo-with-button\">\r\n                      <JustUserPicture />\r\n                      <Modal show={showModal} onHide={handleModalClose}>\r\n                        <Modal.Header closeButton>\r\n                          <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                          <Form.Group\r\n                            controlId=\"formchangePicture\"\r\n                            id=\"formmargin\"\r\n                          >\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"write image url\"\r\n                              onChange={handleUrlChange}\r\n                              onKeyPress={handleUrlKeyPress}\r\n                            />\r\n                          </Form.Group>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                          <Button\r\n                            variant=\"secondary\"\r\n                            onClick={handleModalClose}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button variant=\"primary\" onClick={handleImageChange}>\r\n                            Save Changes\r\n                          </Button>\r\n                        </Modal.Footer>\r\n                      </Modal>\r\n                      <Button onClick={openModal} id=\"settings-button\">\r\n                        {\" \"}\r\n                        Edit{\" \"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div id=\"password-container\" className=\"justify-content-center\">\r\n                  <Form.Group controlId=\"formchangePassword\" id=\"formmargin\">\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"New Password\"\r\n                      onChange={handlePassKeyChange}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button\r\n                    className=\"settings-button\"\r\n                    onClick={handlePasswordChange}\r\n                  >\r\n                    Change password\r\n                  </Button>\r\n                </div>\r\n\r\n                <div id=\"bio-container\" className=\"justify-content-center\">\r\n                  <Button id=\"btnBio\" onClick={handleBioChange}>\r\n                    Change Bio\r\n                  </Button>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={4}\r\n                    className=\"noSizable\"\r\n                    onChange={handleBioKeyChange}\r\n                  >\r\n                    {session.get().bio}\r\n                  </Form.Control>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n\r\n          <Tab eventKey=\"preferences\" title=\"Preferences Settings\">\r\n            <div className=\"tab-custom-container\">\r\n              <div id=\"preferences-settings-container\">\r\n                <Form id=\"preferences-settings-search\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={handleSearchChange}\r\n                    onKeyPress={handleSearchKeyPress}\r\n                  />\r\n                  <Button\r\n                    id=\"preferences-settings-search-button\"\r\n                    variant=\"primary\"\r\n                    onClick={handleSearch}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Form>\r\n                {provider.list.length > 0 ? (\r\n                  provider.list.map((providerElem, index) => {\r\n                    return (\r\n                      <ProviderPreference\r\n                        {...providerElem}\r\n                        onChange={() => {\r\n                          provider.list[index].checked =\r\n                            !provider.list[index].checked;\r\n                          forceUpdate();\r\n                        }}\r\n                        checked={providerElem.checked ? true : false}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div id=\"settings-preferences-loading\">Loading...</div>\r\n                )}\r\n                <Pagination id=\"settings-preferences-pagination\">\r\n                  <Pagination.First onClick={handlePaginationFactory(1)} />\r\n                  <Pagination.Prev\r\n                    onClick={handlePaginationFactory(pagination.index - 1)}\r\n                  />\r\n\r\n                  {pagination.index > PAGINATION_VISIBLE_COUNT ? (\r\n                    <React.Fragment>\r\n                      <Pagination.Item onClick={handlePaginationFactory(1)}>\r\n                        {1}\r\n                      </Pagination.Item>\r\n                      <Pagination.Ellipsis disabled />\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {(() => {\r\n                    let list = [];\r\n\r\n                    for (\r\n                      let i = pagination.index - 1;\r\n                      i >= 1 &&\r\n                      i >=\r\n                        pagination.index - (PAGINATION_VISIBLE_COUNT - 1) / 2;\r\n                      --i\r\n                    ) {\r\n                      list.push(\r\n                        <Pagination.Item onClick={handlePaginationFactory(i)}>\r\n                          {i}\r\n                        </Pagination.Item>\r\n                      );\r\n                    }\r\n\r\n                    return list;\r\n                  })()}\r\n\r\n                  {\r\n                    <Pagination.Item\r\n                      active\r\n                      onClick={handlePaginationFactory(pagination.index)}\r\n                    >\r\n                      {pagination.index}\r\n                    </Pagination.Item>\r\n                  }\r\n\r\n                  {(() => {\r\n                    let list = [];\r\n\r\n                    for (\r\n                      let i = pagination.index + 1;\r\n                      i <= pagination.count &&\r\n                      i <=\r\n                        pagination.index + (PAGINATION_VISIBLE_COUNT - 1) / 2;\r\n                      ++i\r\n                    ) {\r\n                      list.push(\r\n                        <Pagination.Item onClick={handlePaginationFactory(i)}>\r\n                          {i}\r\n                        </Pagination.Item>\r\n                      );\r\n                    }\r\n\r\n                    return list;\r\n                  })()}\r\n\r\n                  {Math.max(pagination.index + 1, 3) < pagination.count ? (\r\n                    <React.Fragment>\r\n                      <Pagination.Ellipsis disabled />\r\n                      <Pagination.Item\r\n                        onClick={handlePaginationFactory(pagination.count)}\r\n                      >\r\n                        {pagination.count}\r\n                      </Pagination.Item>\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  <Pagination.Next\r\n                    onClick={handlePaginationFactory(pagination.index + 1)}\r\n                  />\r\n                  <Pagination.Last\r\n                    onClick={handlePaginationFactory(pagination.count)}\r\n                  />\r\n                </Pagination>\r\n\r\n                <Button id=\"settings-save-btn\" onClick={handleSaveSettings}>\r\n                  {\" \"}\r\n                  Save settings\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n      <CommonFooter fixed />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PageSettings;\r\n","import React, { Component } from \"react\";\r\nimport { Accordion, Card  } from \"react-bootstrap\";\r\n\r\n\r\nclass FAQ_Question extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Accordion.Toggle className=\"faq-question-header\" as={Card.Header} eventKey={this.props.count}>\r\n                    <span>\r\n                        {this.props.count}. {this.props.question}\r\n                    </span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={this.props.count}>\r\n                    <Card.Body className=\"faq-question-body\">\r\n                        <span> {this.props.answer} </span>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FAQ_Question;","import React, { Component } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport CommonFooter from  \"../common/CommonFooter.jsx\";\r\nimport FAQ_Question from \"../utility/FAQ_Question.jsx\";\r\n\r\nimport '../../style/style.scss';\r\n\r\nclass PageFAQ extends Component {\r\n  state = { \r\n    questions: [{\r\n        count: \"1\",\r\n        question: \"What is Fake News Detection?\",\r\n        answer: \"Fake News Detection is a site which provides the user with news from various providers. For each news, it displays a probabiliy of it being fake.\"\r\n      }, {\r\n        count: \"2\",\r\n        question: \"Do I need something special to use it?\",\r\n        answer: \"You only need an account on our site and you will be ready to use it after setting up your account.\"\r\n      }, {\r\n        count: \"3\",\r\n        question: \"Why do I need an account?\",\r\n        answer: \"An account is needed so you can receive news from only from the the providers that you want.\"\r\n      }, {\r\n        count: \"4\",\r\n        question: \"What does the percentage of a news mean?\",\r\n        answer: \"The percentage represents the probability how much of a piece of news is fake.\"\r\n      }, {\r\n        count: \"5\",\r\n        question: \"How can I change the providers that I am following?\",\r\n        answer: <React.Fragment> To update your list of followed providers you need to go to the top right and press on profile avatar. <br /> From here you go Settings > Preferences Settings. <br /> And from here you only need to select the providers you want to follow or unfollow. <br /> In the end, you will have to press the Save settings button to commit your changes. </React.Fragment> \r\n      }, {\r\n        count: \"6\",\r\n        question: \"Can I access the profile of a news provider?\",\r\n        answer: <React.Fragment> Yes, you can access it and in two ways. <br /> The first way is to click on the provider's avatar from a post. <br /> The other way is to go to Settings > Preferences Settings and search for the specific provider and click on its avatar. </React.Fragment>\r\n      }, {\r\n        count: \"7\",\r\n        question: \"How is a news provider's profile different from mine?\",\r\n        answer: \"A news provider's profile contains a score of credibility and a list containing a few of their most recent news.\"\r\n      }, {\r\n        count: \"8\",\r\n        question: \"How do you determine how fake a piece of news is?\",\r\n        answer: \"We use a multitude of artificial intelligence algorithms to determine a percentage of how fake a piece of news is.\"\r\n      }\r\n    ]\r\n  };\r\n  \r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n            <div id=\"faq-header-container\">\r\n              <div id=\"faq-logo-container\">\r\n                <LinkContainer to=\"/\">\r\n                  <img\r\n                    id=\"faq-logo\"\r\n                    className=\"rounded-img\" \r\n                    src={process.env.PUBLIC_URL + \"/res/img/logo512.png\"}\r\n                    alt=\"brand logo\"\r\n                    width=\"128\"\r\n                    height=\"128\"\r\n                  />\r\n                </LinkContainer>\r\n              </div>\r\n              <div id=\"faq-title-container\">\r\n                <h1> \r\n                  Frequently asked questions\r\n                </h1>\r\n              </div>\r\n            </div>\r\n\r\n            <main id=\"faq_main\">\r\n              <Accordion className=\"faq-accordion\">\r\n                {this.state.questions.map(question => {\r\n                  return <FAQ_Question {...question} /> \r\n                }) }\r\n              </Accordion>\r\n            </main>\r\n\r\n\r\n            <CommonFooter showFAQ={false} />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default PageFAQ;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Tabs, Tab, Form, Pagination } from \"react-bootstrap\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport '../../style/style.scss';\r\nimport ProviderPreference from \"../utility/ProviderPreference.jsx\";\r\n\r\nimport RedirectIfNeeded from \"../utility/RedirectIfNeeded\";\r\n\r\nimport request from \"../../util/request.js\";\r\nimport session from \"../../util/session.js\";\r\n\r\nconst PAGINATION_VISIBLE_COUNT = 6;\r\nconst PAGINATION_PROVIDERS_PER_PAGE = 6;\r\n\r\nclass PageSetup extends Component {\r\n  state = {\r\n    provider: {\r\n      count: 0,\r\n      list: []\r\n    },\r\n    query: \"\",       // chanes when pressing search\r\n    searchQuery: \"\", // changes with key presses\r\n    pagination: {\r\n      index: 1,\r\n      count: 0\r\n    },\r\n    sessionInterval: null,\r\n    redirectComponent: null\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.updateProviderCount();\r\n\r\n    if(session.isReady()) {\r\n      this.setState();\r\n    } else {\r\n      this.state.sessionInterval = setInterval(() => {\r\n        if(session.isReady()) {\r\n          clearInterval(this.state.sessionInterval);\r\n          this.setState();\r\n        }\r\n      }, 10);\r\n    }\r\n\r\n    this.shouldRedirect();\r\n  }\r\n\r\n  updateProviders = () => {\r\n    request.get2(this.state.searchQuery.length > 0 ? request.routes.API_PROVIDER_SEARCH : request.routes.API_PROVIDER_GET_INTERVAL, {\r\n      skip: PAGINATION_PROVIDERS_PER_PAGE * (this.state.pagination.index - 1),\r\n      count: Math.min(PAGINATION_PROVIDERS_PER_PAGE, this.state.provider.count - PAGINATION_PROVIDERS_PER_PAGE * (this.state.pagination.index - 1)),\r\n      query: this.state.query\r\n    }, session.authHeaders()).then((res) => {\r\n      console.log(res.data);\r\n        this.setState({\r\n          provider: {\r\n            ...this.state.provider,\r\n            list: res.data\r\n          }\r\n        })\r\n        this.updateProviderChecked();\r\n      }).catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  updateProviderCount = () => {\r\n    request.get2(this.state.searchQuery.length > 0 ? request.routes.API_PROVIDER_SEARCH_COUNT : request.routes.API_PROVIDER_COUNT, {\r\n      query: this.state.query\r\n    }, session.authHeaders()).then((res) => {\r\n        let providerCount = res.data.count;\r\n\r\n        this.setState({\r\n          provider: {\r\n            ...this.state.provider,\r\n            count: providerCount\r\n          },\r\n          pagination: {\r\n            ...this.state.pagination,\r\n            count: (Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE))\r\n          }\r\n        });\r\n\r\n        this.updateProviders();\r\n      }).catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  updateProviderChecked = () => {\r\n    this.state.provider.list.map((provider, index) => {\r\n      request.get2(request.routes.API_PREFERENCES_GET, {\r\n        uid: session.get().userId,\r\n        prov_id: provider.id\r\n      }, session.authHeaders()).then((res) => {\r\n          let checked = (res.data.toString().trim().toLowerCase() === \"true\");\r\n          \r\n          this.state.provider.list[index].checked = checked;\r\n          this.setState();\r\n          this.forceUpdate();\r\n        }).catch((err) => {\r\n          session.onUpdate();\r\n          console.error(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  handlePaginationFactory = (i) => {\r\n    return (event) => {\r\n        if(i >= 1 && i <= this.state.pagination.count) {\r\n          this.setState({\r\n            pagination: {\r\n              ...this.state.pagination,\r\n              index: i\r\n            }\r\n          }, this.updateProviders)\r\n        }\r\n    };\r\n  }\r\n\r\n  handleSearchKeyPress = (event) => {\r\n    if(event.key === \"Enter\") {\r\n      this.handleSearch();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleSearchChange = (event) => {\r\n    this.setState({ searchQuery: event.target.value });\r\n  }\r\n\r\n  handleSearch = () => {\r\n    this.setState({\r\n      query: this.state.searchQuery\r\n    }, () => {\r\n      this.updateProviderCount();\r\n\r\n      console.log(`Search: ${this.state.query}`);\r\n\r\n      this.updateProviderCount();\r\n    })\r\n  }\r\n\r\n  handleSaveSettings = () => {\r\n    this.state.provider.list.map((provider, index) => {\r\n      request.put2(request.routes.API_PREFERENCES_UPDATE, {\r\n        uid: session.get().userId,\r\n        prov_id: provider.id,\r\n        status: provider.checked ? true : false\r\n      }, session.authHeaders()).then((res) => {\r\n          console.log(res);\r\n        }).catch((err) => {\r\n          session.onUpdate();\r\n          console.error(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  shouldRedirect = () => {\r\n    request.get2(request.routes.API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS, {\r\n      uid: session.get().userId,\r\n      skip: 0,\r\n      count: 100\r\n    }, session.authHeaders()).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({redirectComponent: res.data.length > 0 ? <Redirect to=\"/feed\" /> : \"\"});\r\n      }).catch((err) => {\r\n        session.onUpdate();\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <RedirectIfNeeded></RedirectIfNeeded>\r\n        {this.state.redirectComponent}\r\n        <div className=\"tab-custom-container\">\r\n          <div className=\"setup-title\">\r\n            Looks like you're not subscribed to any news provider<br/>Select some, and you'll see news from them in your feed\r\n          </div>\r\n          <div id=\"preferences-setup-container\">\r\n            <Form id=\"preferences-setup-search\">\r\n              <Form.Control type=\"text\" placeholder=\"Search...\" onChange={this.handleSearchChange} onKeyPress={this.handleSearchKeyPress} />\r\n              <Button id=\"preferences-setup-search-button\" variant=\"primary\" onClick={this.handleSearch}>\r\n                Search\r\n              </Button>\r\n            </Form>\r\n            {\r\n              this.state.provider.list.length > 0 ?\r\n                this.state.provider.list.map((provider, index) => {\r\n                  return <ProviderPreference {...provider} onChange={() => {\r\n                      this.state.provider.list[index].checked = !this.state.provider.list[index].checked;\r\n\r\n                      this.setState();\r\n                      this.forceUpdate();\r\n                  }} checked={provider.checked ? true : false} />\r\n                }) :\r\n                <div id=\"setup-preferences-loading\">Loading...</div>\r\n            }\r\n            <Pagination id=\"setup-preferences-pagination\">\r\n              <Pagination.First onClick={this.handlePaginationFactory(1)} />\r\n              <Pagination.Prev onClick={this.handlePaginationFactory(this.state.pagination.index - 1)} />\r\n\r\n              {\r\n                this.state.pagination.index > PAGINATION_VISIBLE_COUNT ?\r\n                <React.Fragment>\r\n                  <Pagination.Item onClick={this.handlePaginationFactory(1)}>{1}</Pagination.Item>\r\n                  <Pagination.Ellipsis disabled/>\r\n                </React.Fragment> :\r\n                  \"\"\r\n              }\r\n\r\n              {\r\n                (() => {\r\n                  let list = [];\r\n\r\n                  for(let i = this.state.pagination.index - 1; i >= 1 && i >= this.state.pagination.index - ((PAGINATION_VISIBLE_COUNT - 1) / 2); --i) {\r\n                    list.push(<Pagination.Item onClick={this.handlePaginationFactory(i)}>{i}</Pagination.Item>);\r\n                  }\r\n\r\n                  return list;\r\n                })()\r\n              }\r\n\r\n              {\r\n                <Pagination.Item active onClick={this.handlePaginationFactory(this.state.pagination.index)}>{this.state.pagination.index}</Pagination.Item>\r\n              }\r\n\r\n              {\r\n                (() => {\r\n                  let list = [];\r\n\r\n                  for(let i = this.state.pagination.index + 1; i <= this.state.pagination.count && i <= this.state.pagination.index + ((PAGINATION_VISIBLE_COUNT - 1) / 2); ++i) {\r\n                    list.push(<Pagination.Item onClick={this.handlePaginationFactory(i)}>{i}</Pagination.Item>);\r\n                  }\r\n\r\n                  return list;\r\n                })()\r\n              }\r\n\r\n              {\r\n                Math.max(this.state.pagination.index + 1, 3) < this.state.pagination.count ?\r\n                  <React.Fragment>\r\n                    <Pagination.Ellipsis disabled/>\r\n                    <Pagination.Item onClick={this.handlePaginationFactory(this.state.pagination.count)}>{this.state.pagination.count}</Pagination.Item>\r\n                  </React.Fragment> :\r\n                  \"\"\r\n              }\r\n\r\n              <Pagination.Next onClick={this.handlePaginationFactory(this.state.pagination.index + 1)} />\r\n              <Pagination.Last onClick={this.handlePaginationFactory(this.state.pagination.count)} />\r\n            </Pagination>\r\n            <LinkContainer to=\"/feed\">\r\n              <Button id=\"setup-save-btn\" onClick={this.handleSaveSettings}>\r\n                Save setup\r\n              </Button>\r\n            </LinkContainer>\r\n          </div>\r\n        </div>\r\n        <CommonFooter fixed />\r\n        <br/><br/><br/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageSetup;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport session from \"../../util/session\";\r\n\r\nclass Auth extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    if(!session.isLoaded()) {\r\n      return \"\";\r\n    }\r\n    return session.isReady() ? this.props.children : <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport PageLanding from \"./pages/PageLanding\";\r\nimport PageFeed from \"./pages/PageFeed\";\r\nimport PageProfile from \"./pages/PageProfile\";\r\nimport PageProfileProvider from \"./pages/PageProfileProvider\";\r\nimport PageSettings from \"./pages/PageSettings\";\r\nimport PageFAQ from \"./pages/PageFAQ\";\r\nimport PageSetup from \"./pages/PageSetup\";\r\n\r\nimport Auth from \"./utility/Auth\";\r\n\r\nimport session from \"../util/session.js\";\r\n\r\nclass App extends Component {\r\n  state = { /*dummy: false*/ };\r\n  constructor() {\r\n    super();\r\n    //await session.load();\r\n    /*Session.getFromCookies();\r\n    Session.onUpdate = this.handleSessionUpdate;*/\r\n    session.onUpdate = () => {\r\n      try {\r\n        this.forceUpdate();\r\n      } catch(ex) {\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await session.load();\r\n    this.forceUpdate();\r\n  }\r\n\r\n  /*handleSessionUpdate = () => {\r\n    this.setState({ dummy: !this.state.dummy });\r\n  };*/\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={PageLanding} />\r\n\r\n          <Auth>\r\n            <React.Fragment>\r\n              <Switch>\r\n                <Route exact path=\"/feed\" component={PageFeed} />\r\n\r\n                <Route exact path=\"/profile\" component={PageProfile} />\r\n\r\n                <Route exact path=\"/settings\" component={PageSettings} />\r\n\r\n                <Route exact path=\"/faq\" component={PageFAQ} />\r\n\r\n                <Route exact path=\"/setup\" component={PageSetup} />\r\n\r\n                <Route exact path=\"/:providerId\" component={PageProfileProvider} />\r\n              </Switch>\r\n            </React.Fragment>\r\n          </Auth>\r\n\r\n          \r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/style.scss';\r\nimport App from './components/App';\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider\r\n      domain=\"gmatei.eu.auth0.com\"\r\n      clientId=\"OzQArkLiVElk6NOvIthKWFmQmeyxZZBI\"\r\n      redirectUri={window.location.origin}\r\n      audience=\"https://gmatei.eu.auth0.com/api/v2/\"\r\n      scope=\"read:messages\"\r\n    >\r\n    <App />\r\n    </Auth0Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}