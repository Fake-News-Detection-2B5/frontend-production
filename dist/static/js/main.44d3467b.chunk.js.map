{"version":3,"sources":["components/common/CommonFooter.jsx","components/utility/Animation-btn.jsx","components/utility/Auth0Btn.jsx","components/pages/PageLanding.jsx","components/utility/Logout.jsx","util/helper.js","util/request.js","util/session.js","components/common/CommonNavbar.jsx","components/common/CommonPost.jsx","components/pages/PageFeed.jsx","components/pages/PageProfile.jsx","components/pages/PageProfileProvider.jsx","components/common/JustUserPicture.jsx","components/utility/ProviderPreference.jsx","components/pages/PageSettings.jsx","components/utility/FAQ_Question.jsx","components/pages/PageFAQ.jsx","components/pages/PageSetup.jsx","components/utility/RedirectIfNeeded.jsx","components/App.js","reportWebVitals.js","index.js"],"names":["CommonFooter","props","state","showFAQ","Fragment","className","this","fixed","href","to","Button","variant","size","Component","Animation","id","Auth0Button","useAuth0","loginWithRedirect","isAuthenticated","onClick","type","block","PageLanding","useState","elem","setElem","onMouseOver","src","alt","width","height","Auth0Btn","Logout","logout","NavDropdown","Item","returnTo","window","location","origin","left","right","endsWith","startsWith","substring","routes","API_URL","API_URL2","API_PROVIDER","API_POST","API_USER","API_PREFERENCES","get","path","data","axios","helper","params","post","put","put2","fullPath","first","Object","entries","getUrl","url","postUrl","putUrl","session","ready","userId","username","avatar","bio","email","request","API_USER_GET_BY_ID","then","res","avatarUrl","catch","err","console","error","CommonNavbar","sessionInterval","user","useEffect","setInterval","clearInterval","Navbar","bg","expand","Brand","authenticated","Collapse","Nav","title","picture","name","CommonPost","target","provider","parseInt","fake","thumbnail","description","PageFeed","posts","postIndex","componentDidMount","loadPosts","addEventListener","listenToScroll","e","scrollHeight","scrollTop","clientHeight","count","API_POST_GET_INTERVAL","skip","setState","concat","map","p","sourceUrl","score","date","postDate","removeEventListener","key","PageProfile","PageProfileProvider","providerReady","providerValid","API_PROVIDER_BY_ID","match","providerId","credibility","JustUserPicture","ProviderPreference","Form","Check","label","onChange","checked","PageSettings","getAccessTokenSilently","list","setProvider","query","setQuery","searchQuery","setSearchQuery","index","pagination","setPagination","React","updateState","forceUpdate","useCallback","showModal","setShowModal","imageUrl","setImageUrl","initialized","setInitialized","updateProviderCount","updateProviders","length","API_PROVIDER_SEARCH","API_PROVIDER_GET_INTERVAL","Math","min","updateProviderChecked","API_PROVIDER_SEARCH_COUNT","API_PROVIDER_COUNT","providerCount","ceil","providerElem","API_PREFERENCES_GET","uid","prov_id","toString","trim","toLowerCase","handlePaginationFactory","i","event","handleSearch","log","handleModalClose","handleImageChange","a","domain","audience","scope","accessToken","userDetailsByIdUrl","sub","fetch","headers","Authorization","metadataResponse","json","user_metadata","image","Tabs","defaultActiveKey","Tab","eventKey","Modal","show","onHide","Header","closeButton","Title","Body","Group","controlId","Control","placeholder","value","onKeyPress","preventDefault","Footer","Pagination","First","Prev","Ellipsis","disabled","push","active","max","Next","Last","API_PREFERENCES_UPDATE","status","FAQ_Question","Card","Accordion","Toggle","as","question","answer","PageFAQ","questions","PageSetup","redirectComponent","shouldRedirect","handleSearchKeyPress","handleSearchChange","handleSaveSettings","API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS","RedirectIfNeeded","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.44d3467b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport '../../style/footer.scss';\r\n\r\nclass CommonFooter extends Component {\r\n    state = { showFAQ: true };\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state.showFAQ = props.showFAQ ?? true;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n            <footer className={this.props.fixed ? \"footer-fixed\" : \"\"}>\r\n                <div className=\"footer-container\">\r\n                    <div>\r\n                        Contact:\r\n                        <a className=\"footer-contact-label\" href=\"https://github.com/orgs/Fake-News-Detection-2B5/teams/front-end\">\r\n                            Our Github\r\n                        </a>\r\n                        &#124;\r\n                        <a className=\"footer-contact-label\" href=\"https://github.com/orgs/Fake-News-Detection-2B5/teams/front-end\">\r\n                            Our Github\r\n                        </a>\r\n                    </div>\r\n                    {\r\n                        this.state.showFAQ ? \r\n                        <LinkContainer to=\"/faq\">\r\n                            <Button variant=\"primary\" size=\"sm\">\r\n                                FAQ\r\n                            </Button>\r\n                        </LinkContainer>\r\n                        :\r\n                        <LinkContainer to=\"/\">\r\n                            <Button variant=\"primary\" size=\"sm\">\r\n                                Home\r\n                            </Button>\r\n                        </LinkContainer>\r\n                    }\r\n                </div>\r\n            </footer>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default CommonFooter;","import React, { Component } from \"react\";\r\n\r\nclass Animation extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return <div id=\"fancy-btn\"></div>;\r\n  }\r\n}\r\n\r\nexport default Animation;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\r\n\r\nconst Auth0Button = () => {\r\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\r\n  return (\r\n    <Button\r\n      onClick={() => loginWithRedirect()}\r\n      id=\"btn-heigth\"\r\n      type=\"button\"\r\n      size=\"lg\"\r\n      block\r\n    >\r\n      Login or Register\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default Auth0Button;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Container, Col, Row } from \"react-bootstrap\";\r\n\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport Animation from \"../utility/Animation-btn.jsx\";\r\nimport Auth0Btn from \"../utility/Auth0Btn.jsx\";\r\nimport { Redirect } from \"react-router\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport \"../../style/landing.scss\";\r\n\r\nfunction PageLanding() {\r\n  const [elem, setElem] = useState();\r\n  const { isAuthenticated } = useAuth0();\r\n\r\n  return isAuthenticated ? (\r\n    <Redirect to=\"/setup\" />\r\n  ) : (\r\n    <React.Fragment>\r\n      <grid-template>\r\n        <grid-image onMouseOver={() => setElem(<div></div>)}>\r\n          <img\r\n            src={\"../../../res/img/landingpage.svg\"}\r\n            alt=\"React Logo\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          />\r\n        </grid-image>\r\n        {elem}\r\n        <btn-login onMouseOver={() => setElem(<Animation />)}>\r\n          <Auth0Btn />\r\n        </btn-login>\r\n        <div id=\"top-remove\" onMouseOver={() => setElem(<div></div>)}>\r\n          <div id=\"info\">\r\n            {/* \r\n            <img\r\n              id=\"website-logo\"\r\n              className=\"rounded-img\"\r\n              src={process.env.PUBLIC_URL + \"/res/img/logo512.png\"}\r\n              alt=\"brand logo\"\r\n            />\r\n           */}\r\n            <h1 id=\"title-fnd\">\r\n              <b>Fake News Detection</b>\r\n            </h1>\r\n          </div>\r\n          <div id=\"info-bottom\">\r\n            <h2>Welcome!</h2>\r\n            <h3>Please login or register to continue...</h3>\r\n          </div>\r\n        </div>\r\n        <div id=\"left-remove\" onMouseOver={() => setElem(<div></div>)}></div>\r\n        <div id=\"bottom-remove\" onMouseOver={() => setElem(<div></div>)}></div>\r\n        <div id=\"right-remove\" onMouseOver={() => setElem(<div></div>)}></div>\r\n      </grid-template>\r\n      <CommonFooter fixed />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PageLanding;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\n\r\nfunction Logout() {\r\n  const { isAuthenticated, logout } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <NavDropdown.Item\r\n        onClick={() => {\r\n          logout({ returnTo: window.location.origin });\r\n          window.location = \"/\";\r\n        }}\r\n      >\r\n        Logout\r\n      </NavDropdown.Item>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","export default {\r\n    pathJoin: (left, right) => {\r\n        if(left.endsWith('/')) {\r\n            if(right.startsWith('/')) {\r\n                return left + right.substring(1);\r\n            } else {\r\n                return left + right;\r\n            }\r\n        } else {\r\n            if(right.startsWith('/')) {\r\n                return left + right;\r\n            } else {\r\n                return left + '/' + right;\r\n            }\r\n        }\r\n    }\r\n}","import axios from 'axios';\r\nimport helper from './helper.js';\r\n\r\nconst routes = {\r\n    API_URL: 'https://fake-news-zuul-gateway.herokuapp.com/fake-database',\r\n    API_URL2: 'https://fake-database-fe-support.herokuapp.com'\r\n};\r\n\r\nroutes['API_PROVIDER'] = '/provider';\r\nroutes['API_PROVIDER_BY_ID'] = `${routes.API_PROVIDER}/getById`;\r\nroutes['API_PROVIDER_COUNT'] = `${routes.API_PROVIDER}/getCount`;\r\nroutes['API_PROVIDER_GET_INTERVAL'] = `${routes.API_PROVIDER}/getInterval`;\r\nroutes['API_PROVIDER_SEARCH_COUNT'] = `${routes.API_PROVIDER}/searchCount`;\r\nroutes['API_PROVIDER_SEARCH'] = `${routes.API_PROVIDER}/search`;\r\nroutes['API_PROVIDER_GET_BY_NAME'] = `${routes.API_PROVIDER}/getByName`;\r\n\r\nroutes['API_POST'] = '/post';\r\nroutes['API_POST_GET_INTERVAL'] = `${routes.API_POST}/getInterval`;\r\n\r\nroutes['API_USER'] = '/user';\r\nroutes['API_USER_GET_BY_ID'] = `${routes.API_USER}/get`;\r\n\r\nroutes['API_PREFERENCES'] = '/preferences';\r\nroutes['API_PREFERENCES_GET'] = `${routes.API_PREFERENCES}/isSubscribed`;\r\nroutes['API_PREFERENCES_UPDATE'] = `${routes.API_PREFERENCES}/updateSubscriptionStatus`;\r\nroutes['API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS'] = `${routes.API_PREFERENCES}/getByUserId`;\r\n\r\nexport default {\r\n    routes: routes,\r\n    get: (path, data) => {\r\n        return axios.get(helper.pathJoin(routes.API_URL, path), { params: data });\r\n    },\r\n    post: (path, data) => {\r\n        return axios.post(helper.pathJoin(routes.API_URL, path), data);\r\n    },\r\n    put: (path, data) => {\r\n        return axios.put(helper.pathJoin(routes.API_URL, path), data);\r\n    },\r\n    put2: (path, data) => {\r\n        var fullPath = helper.pathJoin(routes.API_URL, path);\r\n        fullPath += '?';\r\n        var first = true;\r\n        for (const [key, value] of Object.entries(data)) {\r\n            if(first) {\r\n                first = false;\r\n            }\r\n            else {\r\n                fullPath += '&'\r\n            }\r\n            fullPath += key + '=' + value;\r\n          }\r\n        return axios.put(fullPath, data);\r\n    },\r\n    getUrl: (url, data) => {\r\n        return axios.get(url, { params: data });\r\n    },\r\n    postUrl: (url, data) => {\r\n        return axios.post(url, data);\r\n    },\r\n    putUrl: (url, data) => {\r\n        return axios.put(url, data);\r\n    }\r\n};","import request from \"./request.js\"\r\n\r\nvar session = {\r\n    ready: false,\r\n\r\n    data: {\r\n        userId: 43, // Retrieve this from the server.\r\n\r\n        username: null,\r\n        avatar: null,\r\n        bio: null,\r\n        email: null\r\n    }\r\n};\r\n\r\nexport default {\r\n    init: () => {\r\n      if(!session.ready) {\r\n        request.get(request.routes.API_USER_GET_BY_ID, {\r\n            id: session.data.userId\r\n        }).then((res) => {\r\n                session.data.username = res.data.username;\r\n                session.data.avatar = res.data.avatarUrl;\r\n                session.data.bio = res.data.bio;\r\n                session.data.email = res.data.email;\r\n\r\n                session.ready = true;\r\n            }).catch((err) => {\r\n                console.error(err);\r\n                session.ready = true;\r\n        });\r\n      }\r\n    },\r\n    isReady: () => session.ready,\r\n    get: () => session.data\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport Logout from \"../utility/Logout.jsx\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport \"../../style/navbar.scss\";\r\n\r\nimport session from \"../../util/session.js\";\r\n\r\nconst CommonNavbar = (props) => {\r\n  var { sessionInterval } = useState(0);\r\n  const { isAuthenticated, user } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (!session.isReady()) {\r\n      sessionInterval = setInterval(() => {\r\n        if (session.isReady()) {\r\n          clearInterval(sessionInterval);\r\n        }\r\n      }, 10);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar\r\n        id=\"navbar\"\r\n        bg=\"white\"\r\n        expand=\"sm\"\r\n        className=\"sticky-top border-bottom\"\r\n      >\r\n        <LinkContainer to=\"/\">\r\n          <Navbar.Brand>\r\n            <img\r\n              className=\"image-brand rounded-img shadow-img\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              src={process.env.PUBLIC_URL + \"/res/img/logo512.png\"}\r\n              alt=\"Brand\"\r\n            />\r\n          </Navbar.Brand>\r\n        </LinkContainer>\r\n        {props.authenticated ? (\r\n          <Navbar.Collapse>\r\n            <Nav className=\"ml-auto\">\r\n              <NavDropdown\r\n                title={\r\n                  isAuthenticated ? \r\n                  <React.Fragment>\r\n                    <img\r\n                      className=\"image-brand\"\r\n                      width=\"32\"\r\n                      height=\"32\"\r\n                      src={user.picture}\r\n                      alt={user.name}\r\n                    />\r\n                    <span id=\"username\">{user.name}</span>\r\n                  </React.Fragment>\r\n                  : \"\"\r\n                }\r\n              >\r\n                <LinkContainer to=\"/profile\">\r\n                  <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/settings\">\r\n                  <NavDropdown.Item>Settings</NavDropdown.Item>\r\n                </LinkContainer>\r\n\r\n                <Logout />\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Navbar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CommonNavbar;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport '../../style/post.scss';\r\n\r\nclass CommonPost extends Component {\r\n    state = { };\r\n  \r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n            <div className=\"post-container\">\r\n                <a className=\"post-readmore\" href={this.props.url} target=\"_blank\">\r\n                    [read more]\r\n                </a>\r\n                <div className=\"post-header\">\r\n                    <LinkContainer to=\"/profile_provider\">\r\n                        <div className=\"pointer\">\r\n                            <img className=\"post-provider-avatar\" src={this.props.provider.avatar} alt=\"Avatar\" />\r\n                            <span className=\"post-provider-name\">\r\n                                {this.props.provider.name}\r\n                            </span>\r\n                        </div>\r\n                    </LinkContainer>\r\n                    <div>\r\n                        <LinkContainer to=\"#\">\r\n                            <a className=\"post-feedback-text text-secondary\">\r\n                                (feedback)\r\n                            </a>\r\n                        </LinkContainer>\r\n                        <span className={`post-credibility-${parseInt(this.props.fake) < 50 ? 'good' : 'bad'}`}>\r\n                            {this.props.fake}% fake\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"post-body\">\r\n                    <a href={this.props.url} target=\"_blank\">\r\n                        <img className=\"post-thumbnail\" src={this.props.thumbnail} alt=\"Thumbnail\" />\r\n                    </a>\r\n                    <a className=\"post-title\" href={this.props.url} target=\"_blank\">\r\n                        {this.props.title}\r\n                    </a>\r\n                    <div className=\"post-description text-secondary\">\r\n                        {this.props.description}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default CommonPost;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport CommonPost from \"../common/CommonPost.jsx\";\r\nimport request from \"../../util/request.js\";\r\n\r\nimport \"../../style/feed.scss\";\r\n\r\nconst POST_INITIAL_COUNT = 10;\r\nconst POST_LOAD_COUNT = 5;\r\n\r\nclass PageFeed extends Component {\r\n  state = {\r\n    posts: [],\r\n    postIndex: 0,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.loadPosts(POST_INITIAL_COUNT);\r\n    window.addEventListener(\"scroll\", this.listenToScroll, true);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.listenToScroll);\r\n  }\r\n\r\n  listenToScroll = (e) => {\r\n    if (e.target.scrollHeight - e.target.scrollTop === e.target.clientHeight) {\r\n      this.loadPosts(POST_LOAD_COUNT);\r\n    }\r\n  };\r\n\r\n  loadPosts = (count) => {\r\n    request\r\n      .get(request.routes.API_POST_GET_INTERVAL, {\r\n        skip: this.state.postIndex,\r\n        count: count,\r\n      })\r\n      .then((res) => {\r\n        this.setState({\r\n          posts: this.state.posts.concat(\r\n            res.data.map((p) => {\r\n              return {\r\n                provider: {\r\n                  avatar:\r\n                    \"http://www.digi24.ro/static/theme-repo/bin/images/digi24-logo.png\",\r\n                  name: \"Digi24\",\r\n                },\r\n                id: p.id,\r\n                title: p.title,\r\n                thumbnail: p.thumbnail,\r\n                description: p.description,\r\n                url: p.sourceUrl,\r\n                fake: p.score,\r\n                date: p.postDate,\r\n              };\r\n            })\r\n          ),\r\n          postIndex: this.state.postIndex + count,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CommonNavbar authenticated />\r\n        <main id=\"main-feed\">\r\n          {this.state.posts.map((post) => {\r\n            return <CommonPost {...post} key={`post-${post.id}`} />;\r\n          })}\r\n        </main>\r\n        <CommonFooter fixed />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFeed;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Profile } from \"../utility/Profile\";\r\n\r\nimport session from \"../../util/session.js\";\r\n\r\nimport \"../../style/profile.scss\";\r\n\r\nconst PageProfile = () => {\r\n  var { sessionInterval } = useState(0);\r\n  const { isAuthenticated, user } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (!session.isReady()) {\r\n      sessionInterval = setInterval(() => {\r\n        if (session.isReady()) {\r\n          clearInterval(sessionInterval);\r\n        }\r\n      }, 10);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CommonNavbar authenticated />\r\n      {isAuthenticated ? \r\n      <div id=\"profile-container\">\r\n        <div id=\"profile-header\">\r\n          <img src={user.picture} alt={user.name}/>\r\n          <div id=\"profile-username\">\r\n            <h1>{user.name}</h1>\r\n          </div>\r\n        </div>\r\n        <div id=\"bio-container-profile\" className=\"justify-content-center\">\r\n          <div id=\"bio-text-container\">{session.get().bio}</div>\r\n        </div>\r\n      </div>\r\n      : \"\" }\r\n      <CommonFooter fixed />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PageProfile;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport CommonPost   from \"../common/CommonPost.jsx\";\r\nimport request from \"../../util/request.js\";\r\n\r\nimport '../../style/profile_provider.scss';\r\n\r\nclass PageProfileProvider extends Component {\r\n  state = {\r\n    providerReady: false,\r\n    provider: {},\r\n    posts: [],\r\n    providerValid: true\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    request.get(request.routes.API_PROVIDER_BY_ID, {\r\n      id: this.props.match.params.providerId \r\n    }).then((res) => {\r\n        this.setState({\r\n          provider: res.data,\r\n          providerValid: res.data ? true : false,\r\n          providerReady: true\r\n        });\r\n\r\n      }).catch((err) => {\r\n        console.error(err);\r\n        this.setState({\r\n          providerValid: false\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n      {this.state.providerValid == false ? <Redirect to=\"/feed\" /> : \r\n      <React.Fragment>\r\n        <CommonNavbar authenticated />\r\n        {this.state.providerReady ? \r\n        <React.Fragment>\r\n            <div id=\"profile-container\">\r\n          <div id=\"profile-header\">\r\n            <img className=\"photo-border\" src={this.state.provider.avatar} alt=\"User avatar\" />\r\n            <div id=\"provider-profile-name-credibility\">\r\n              <h1> {this.state.provider.name}  </h1>\r\n              <h2> Credibility: {this.state.provider.credibility}% </h2>\r\n            </div>\r\n          </div>\r\n          <div id=\"bio-container-provider\" className=\"justify-content-center\">\r\n            <div id=\"bio-text-container\" >\r\n              No description\r\n                </div>\r\n          </div>\r\n        </div>\r\n        <div id=\"horizontal-line\">\r\n\r\n        </div>\r\n\r\n        <div id=\"profile-posts\">\r\n          <main>\r\n            {this.state.posts.map(post => {\r\n              return <CommonPost {...post} />\r\n            })}\r\n          </main>\r\n        </div>\r\n        </React.Fragment> \r\n        :\r\n        \"\" \r\n      }\r\n        \r\n\r\n        <CommonFooter fixed />\r\n      </React.Fragment>\r\n    }\r\n    </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default PageProfileProvider;","import React, { useState, useEffect } from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport \"../../style/settings.scss\";\r\n\r\nconst JustUserPicture = () => {\r\n    const { isAuthenticated, user } = useAuth0();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isAuthenticated ?\r\n            <img \r\n            id=\"photo-border\"\r\n            src={user.picture} alt={user.name}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            />\r\n            : \"Error\"}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default JustUserPicture;","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, NavDropdown, Form } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nclass ProviderPreference extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"preference-provider\">\r\n          <img\r\n            className=\"photo-border\"\r\n            src={this.props.avatar}\r\n            width=\"128\"\r\n            height=\"128\"\r\n          />\r\n          <div className=\"preference-provider-info\">\r\n            <p> {this.props.name} </p>\r\n            <p> Credibility: {this.props.credibility}% </p>\r\n            \r\n          </div>\r\n          <Form className=\"ml-auto subscribe-form\">\r\n            <div key={`provider-checkbox` + this.props.name} className=\"mb-3\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                id={`provider-checkbox` + this.props.name}\r\n                label={`Subscribed`}\r\n                onChange={() => {this.props.onChange();}}\r\n                checked={this.props.checked}\r\n              />\r\n            </div>\r\n          </Form>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProviderPreference;\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { Button, Tabs, Tab, Form, Pagination, Modal } from \"react-bootstrap\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport JustUserPicture from \"../common/JustUserPicture.jsx\";\r\n\r\nimport \"../../style/settings.scss\";\r\nimport ProviderPreference from \"../utility/ProviderPreference.jsx\";\r\n\r\nimport request from \"../../util/request.js\";\r\nimport session from \"../../util/session.js\";\r\n\r\nconst PAGINATION_VISIBLE_COUNT = 3;\r\nconst PAGINATION_PROVIDERS_PER_PAGE = 3;\r\n\r\nlet PageSettings = () => {\r\n  const { user, getAccessTokenSilently } = useAuth0();\r\n  let [provider, setProvider] = useState({ count: 0, list: [] });\r\n  let [query, setQuery] = useState(\"\");\r\n  let [searchQuery, setSearchQuery] = useState(\"\");\r\n  let [pagination, setPagination] = useState({\r\n    index: 1,\r\n    count: 0,\r\n  });\r\n  let [sessionInterval, setSessionInterval] = useState(null);\r\n  let [fileUpload, setFileUpload] = useState(null);\r\n  let [, updateState] = React.useState();\r\n  let forceUpdate = React.useCallback(() => updateState({}), []);\r\n  let [showModal, setShowModal] = useState(false);\r\n\r\n  //TEMPORAL\r\n  let [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  let [initialized, setInitialized] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!initialized) {\r\n      setInitialized(true);\r\n      updateProviderCount();\r\n      if (!session.isReady()) {\r\n        sessionInterval = setInterval(() => {\r\n          if (session.isReady()) {\r\n            clearInterval(sessionInterval);\r\n          }\r\n        }, 10);\r\n      }\r\n    }\r\n  });\r\n\r\n  let updateProviders = () => {\r\n    request\r\n      .get(\r\n        searchQuery.length > 0\r\n          ? request.routes.API_PROVIDER_SEARCH\r\n          : request.routes.API_PROVIDER_GET_INTERVAL,\r\n        {\r\n          skip: PAGINATION_PROVIDERS_PER_PAGE * (pagination.index - 1),\r\n          count: Math.min(\r\n            PAGINATION_PROVIDERS_PER_PAGE,\r\n            provider.count -\r\n              PAGINATION_PROVIDERS_PER_PAGE * (pagination.index - 1)\r\n          ),\r\n          query: query,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setProvider({\r\n          ...provider,\r\n          list: res.data,\r\n        });\r\n        provider = {\r\n          ...provider,\r\n          list: res.data,\r\n        };\r\n        updateProviderChecked();\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let updateProviderCount = () => {\r\n    request\r\n      .get(\r\n        searchQuery.length > 0\r\n          ? request.routes.API_PROVIDER_SEARCH_COUNT\r\n          : request.routes.API_PROVIDER_COUNT,\r\n        {\r\n          query: query,\r\n        }\r\n      )\r\n      .then((res) => {\r\n        let providerCount = res.data.count;\r\n\r\n        setProvider({\r\n          ...provider,\r\n          count: providerCount,\r\n        });\r\n        provider = {\r\n          ...provider,\r\n          count: providerCount,\r\n        };\r\n        setPagination({\r\n          ...pagination,\r\n          count: Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE),\r\n        });\r\n\r\n        pagination = {\r\n          ...pagination,\r\n          count: Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE),\r\n        };\r\n\r\n        updateProviders();\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  let updateProviderChecked = () => {\r\n    provider.list.map((providerElem, index) => {\r\n      request\r\n        .get(request.routes.API_PREFERENCES_GET, {\r\n          uid: session.get().userId,\r\n          prov_id: providerElem.id,\r\n        })\r\n        .then((res) => {\r\n          let checked = res.data.toString().trim().toLowerCase() === \"true\";\r\n\r\n          provider.list[index].checked = checked; //@SEE\r\n          forceUpdate();\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  let handlePaginationFactory = (i) => {\r\n    return (event) => {\r\n      if (i >= 1 && i <= pagination.count) {\r\n        setPagination({\r\n          ...pagination,\r\n          index: i,\r\n        });\r\n        pagination = {\r\n          ...pagination,\r\n          index: i,\r\n        };\r\n        updateProviders();\r\n      }\r\n    };\r\n  };\r\n\r\n  let handleSearchKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  let handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  let handleSearch = () => {\r\n    setQuery(searchQuery);\r\n    console.log(`Search: ${query}`);\r\n    updateProviderCount();\r\n  };\r\n\r\n  let handleSaveSettings = () => {\r\n    provider.list.map((provider, index) => {\r\n      request\r\n        .put2(request.routes.API_PREFERENCES_UPDATE, {\r\n          uid: session.get().userId,\r\n          prov_id: provider.id,\r\n          status: provider.checked ? true : false,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  let openModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  let handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  let inputProfile = () => {\r\n    console.log(\"MERGE\");\r\n  };\r\n\r\n  let handleImageChange = async () => {\r\n    const domain = \"gmatei.eu.auth0.com\";\r\n\r\n    const accessToken = await getAccessTokenSilently({\r\n      audience: `https://gmatei.eu.auth0.com/api/v2/`,\r\n      scope:\r\n        \"read:client_grants,create:client_grants,delete:client_grants,update:client_grants,read:users,update:users,delete:user,create:users,read:users_app_metadata,update:users_app_metadata,delete:users_app_metadata,create:users_app_metadata,read:user_custom_blocks,create:user_custom_blocks,delete:user_custom_blocks,create:user_tickets,read:clients,update:clients,delete:clients,create:clients,read:client_keys,update:client_keys ,delete:client_keys,create:client_keys,read:connections,update:connections,delete:connections,create:connections,read:resource_servers,update:resource_servers,delete:resource_servers,create:resource_servers,read:device_credentials,update:device_credentials,delete:device_credentials,create:device_credentials,read:rules,update:rules,delete:rules,create:rules,read:rules_configs,update:rules_configs,delete:rules_configs,read:hooks,update:hookS,delete:hooks,create:hooks,read:actions,update:actions\t,delete:actions,create:actions,read:email_provider,update:email_provider,delete:email_provider,create:email_provider,blacklist:tokens,read:stats,read:insights,read:tenant_settings,update:tenant_settings,read:logs,read:logs_users,read:shields,create:shields,update:shields,delete:shields,read:anomaly_blocks,delete:anomaly_blocks\t ,update:triggers,read:triggers,read:grants,delete:grants,read:guardian_factors,update:guardian_factors,read:guardian_enrollments,delete:guardian_enrollments,create:guardian_enrollment_tickets,read:user_idp_tokens,create:passwords_checking_job,delete:passwords_checking_job,read:custom_domains,delete:custom_domains,create:custom_domains,update:custom_domains,read:email_templates,create:email_templates,update:email_templates,read:mfa_policies,update:mfa_policies,read:roles,create:roles\t ,delete:roles,update:roles,read:prompts,update:prompts,read:branding,update:branding,delete:branding,read:log_streams,create:log_streams,delete:log_streams,update:log_streams,create:signing_keys,read:signing_keys,update:signing_keys,read:limits,update:limits,create:role_members,read:role_members,delete:role_members,read:entitlements,read:attack_protection,update:attack_protection,read:organizations,update:organizations,create:organizations,delete:organizations,create:organization_members,read:organization_members,delete:organization_members,create:organization_connections,read:organization_connections,update:organization_connections,delete:organization_connections,create:organization_member_roles,read:organization_member_roles,delete:organization_member_roles,create:organization_invitations,read:organization_invitations,delete:organization_invitations\",\r\n    });\r\n    const userDetailsByIdUrl = `https://${domain}/api/v2/users/${user.sub}`;\r\n\r\n    const metadataResponse = await fetch(userDetailsByIdUrl, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n\r\n    const { user_metadata } = await metadataResponse.json();\r\n    user.user_metadata = user_metadata;\r\n    console.log(user_metadata);\r\n    user.user_metadata = { image: imageUrl };\r\n    if (user.user_metadata.picture) {\r\n      user.picture = imageUrl;\r\n      console.log(\"MERGE BOSS!\");\r\n    }\r\n  };\r\n\r\n  let handleUrlKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleImageChange();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  let handleUrlChange = (event) => {\r\n    setImageUrl(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CommonNavbar authenticated />\r\n      <div id=\"settings-container\">\r\n        <Tabs defaultActiveKey=\"account\" className=\"justify-content-center\">\r\n          <Tab eventKey=\"account\" title=\"Account Settings\">\r\n            <div className=\"tab-custom-container\">\r\n              <div id=\"account-settings-container\">\r\n                <div id=\"account-container\">\r\n                  <div id=\"photo-container\" className=\"justify-content-center\">\r\n                    <div id=\"photo-with-button\">\r\n                      <JustUserPicture />\r\n                      <Modal show={showModal} onHide={handleModalClose}>\r\n                        <Modal.Header closeButton>\r\n                          <Modal.Title>Modal heading</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                          <Form.Group\r\n                            controlId=\"formchangePicture\"\r\n                            id=\"formmargin\"\r\n                          >\r\n                            <Form.Control\r\n                              type=\"text\"\r\n                              placeholder=\"write image url\"\r\n                              onChange={handleUrlChange}\r\n                              onKeyPress={handleUrlKeyPress}\r\n                            />\r\n                          </Form.Group>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                          <Button\r\n                            variant=\"secondary\"\r\n                            onClick={handleModalClose}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                          <Button variant=\"primary\" onClick={handleImageChange}>\r\n                            Save Changes\r\n                          </Button>\r\n                        </Modal.Footer>\r\n                      </Modal>\r\n                      <Button onClick={openModal} id=\"settings-button\">\r\n                        {\" \"}\r\n                        Edit{\" \"}\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div id=\"password-container\" className=\"justify-content-center\">\r\n                  <Form.Group controlId=\"formchangePassword\" id=\"formmargin\">\r\n                    <Form.Control type=\"password\" placeholder=\"New Password\" />\r\n                  </Form.Group>\r\n                  <Button className=\"settings-button\">Change password</Button>\r\n                </div>\r\n\r\n                <div id=\"bio-container\" className=\"justify-content-center\">\r\n                  <Button className=\"settings-button\" id=\"bio-button\">\r\n                    Change Bio\r\n                  </Button>\r\n                  <div id=\"bio-text-container\">{session.get().bio}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n\r\n          <Tab eventKey=\"preferences\" title=\"Preferences Settings\">\r\n            <div className=\"tab-custom-container\">\r\n              <div id=\"preferences-settings-container\">\r\n                <Form id=\"preferences-settings-search\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Search...\"\r\n                    onChange={handleSearchChange}\r\n                    onKeyPress={handleSearchKeyPress}\r\n                  />\r\n                  <Button\r\n                    id=\"preferences-settings-search-button\"\r\n                    variant=\"primary\"\r\n                    onClick={handleSearch}\r\n                  >\r\n                    Search\r\n                  </Button>\r\n                </Form>\r\n                {provider.list.length > 0 ? (\r\n                  provider.list.map((providerElem, index) => {\r\n                    return (\r\n                      <ProviderPreference\r\n                        {...providerElem}\r\n                        onChange={() => {\r\n                          provider.list[index].checked =\r\n                            !provider.list[index].checked;\r\n                          forceUpdate();\r\n                        }}\r\n                        checked={providerElem.checked ? true : false}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div id=\"settings-preferences-loading\">Loading...</div>\r\n                )}\r\n                <Pagination id=\"settings-preferences-pagination\">\r\n                  <Pagination.First onClick={handlePaginationFactory(1)} />\r\n                  <Pagination.Prev\r\n                    onClick={handlePaginationFactory(pagination.index - 1)}\r\n                  />\r\n\r\n                  {pagination.index > PAGINATION_VISIBLE_COUNT ? (\r\n                    <React.Fragment>\r\n                      <Pagination.Item onClick={handlePaginationFactory(1)}>\r\n                        {1}\r\n                      </Pagination.Item>\r\n                      <Pagination.Ellipsis disabled />\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  {(() => {\r\n                    let list = [];\r\n\r\n                    for (\r\n                      let i = pagination.index - 1;\r\n                      i >= 1 &&\r\n                      i >=\r\n                        pagination.index - (PAGINATION_VISIBLE_COUNT - 1) / 2;\r\n                      --i\r\n                    ) {\r\n                      list.push(\r\n                        <Pagination.Item onClick={handlePaginationFactory(i)}>\r\n                          {i}\r\n                        </Pagination.Item>\r\n                      );\r\n                    }\r\n\r\n                    return list;\r\n                  })()}\r\n\r\n                  {\r\n                    <Pagination.Item\r\n                      active\r\n                      onClick={handlePaginationFactory(pagination.index)}\r\n                    >\r\n                      {pagination.index}\r\n                    </Pagination.Item>\r\n                  }\r\n\r\n                  {(() => {\r\n                    let list = [];\r\n\r\n                    for (\r\n                      let i = pagination.index + 1;\r\n                      i <= pagination.count &&\r\n                      i <=\r\n                        pagination.index + (PAGINATION_VISIBLE_COUNT - 1) / 2;\r\n                      ++i\r\n                    ) {\r\n                      list.push(\r\n                        <Pagination.Item onClick={handlePaginationFactory(i)}>\r\n                          {i}\r\n                        </Pagination.Item>\r\n                      );\r\n                    }\r\n\r\n                    return list;\r\n                  })()}\r\n\r\n                  {Math.max(pagination.index + 1, 3) < pagination.count ? (\r\n                    <React.Fragment>\r\n                      <Pagination.Ellipsis disabled />\r\n                      <Pagination.Item\r\n                        onClick={handlePaginationFactory(pagination.count)}\r\n                      >\r\n                        {pagination.count}\r\n                      </Pagination.Item>\r\n                    </React.Fragment>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n\r\n                  <Pagination.Next\r\n                    onClick={handlePaginationFactory(pagination.index + 1)}\r\n                  />\r\n                  <Pagination.Last\r\n                    onClick={handlePaginationFactory(pagination.count)}\r\n                  />\r\n                </Pagination>\r\n\r\n                <Button id=\"settings-save-btn\" onClick={handleSaveSettings}>\r\n                  {\" \"}\r\n                  Save settings\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n        </Tabs>\r\n      </div>\r\n      <CommonFooter fixed />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PageSettings;","import React, { Component } from \"react\";\r\nimport { Accordion, Card  } from \"react-bootstrap\";\r\n\r\n\r\nclass FAQ_Question extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <Accordion.Toggle className=\"faq-question-header\" as={Card.Header} eventKey={this.props.count}>\r\n                    <span>\r\n                        {this.props.count}. {this.props.question}\r\n                    </span>\r\n                </Accordion.Toggle>\r\n                <Accordion.Collapse eventKey={this.props.count}>\r\n                    <Card.Body className=\"faq-question-body\">\r\n                        <span> {this.props.answer} </span>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FAQ_Question;","import React, { Component } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nimport CommonFooter from  \"../common/CommonFooter.jsx\";\r\nimport FAQ_Question from \"../utility/FAQ_Question.jsx\";\r\n\r\nimport '../../style/faq.scss';\r\n\r\nclass PageFAQ extends Component {\r\n  state = { \r\n    questions: [{\r\n        count: \"1\",\r\n        question: \"What is Fake News Detection?\",\r\n        answer: \"Fake News Detection is a site which provides the user with news from various providers. For each news, it displays a probabiliy of it being fake.\"\r\n      }, {\r\n        count: \"2\",\r\n        question: \"Do I need something special to use it?\",\r\n        answer: \"You only need an account on our site and you will be ready to use it after setting up your account.\"\r\n      }, {\r\n        count: \"3\",\r\n        question: \"Why do I need an account?\",\r\n        answer: \"An account is needed so you can receive news from only from the the providers that you want.\"\r\n      }, {\r\n        count: \"4\",\r\n        question: \"What does the percentage of a news mean?\",\r\n        answer: \"The percentage represents the probability how much of a piece of news is fake.\"\r\n      }, {\r\n        count: \"5\",\r\n        question: \"How can I change the providers that I am following?\",\r\n        answer: <React.Fragment> To update your list of followed providers you need to go to the top right and press on profile avatar. <br /> From here you go Settings > Preferences Settings. <br /> And from here you only need to select the providers you want to follow or unfollow. <br /> In the end, you will have to press the Save settings button to commit your changes. </React.Fragment> \r\n      }, {\r\n        count: \"6\",\r\n        question: \"Can I access the profile of a news provider?\",\r\n        answer: <React.Fragment> Yes, you can access it and in two ways. <br /> The first way is to click on the provider's avatar from a post. <br /> The other way is to go to Settings > Preferences Settings and search for the specific provider and click on its avatar. </React.Fragment>\r\n      }, {\r\n        count: \"7\",\r\n        question: \"How is a news provider's profile different from mine?\",\r\n        answer: \"A news provider's profile contains a score of credibility and a list containing a few of their most recent news.\"\r\n      }, {\r\n        count: \"8\",\r\n        question: \"How do you determine how fake a piece of news is?\",\r\n        answer: \"We use a multitude of artificial intelligence algorithms to determine a percentage of how fake a piece of news is.\"\r\n      }\r\n    ]\r\n  };\r\n  \r\n    render() {\r\n      return (\r\n        <React.Fragment>\r\n            <div id=\"faq-header-container\">\r\n              <div id=\"faq-logo-container\">\r\n                <LinkContainer to=\"/\">\r\n                  <img\r\n                    id=\"faq-logo\"\r\n                    className=\"rounded-img\" \r\n                    src={process.env.PUBLIC_URL + \"/res/img/logo512.png\"}\r\n                    alt=\"brand logo\"\r\n                    width=\"128\"\r\n                    height=\"128\"\r\n                  />\r\n                </LinkContainer>\r\n              </div>\r\n              <div id=\"faq-title-container\">\r\n                <h1> \r\n                  Frequently asked questions\r\n                </h1>\r\n              </div>\r\n            </div>\r\n\r\n            <main id=\"faq_main\">\r\n              <Accordion className=\"faq-accordion\">\r\n                {this.state.questions.map(question => {\r\n                  return <FAQ_Question {...question} /> \r\n                }) }\r\n              </Accordion>\r\n            </main>\r\n\r\n\r\n            <CommonFooter showFAQ={false} />\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nexport default PageFAQ;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Tabs, Tab, Form, Pagination } from \"react-bootstrap\";\r\n\r\nimport CommonNavbar from \"../common/CommonNavbar.jsx\";\r\nimport CommonFooter from \"../common/CommonFooter.jsx\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nimport \"../../style/setup.scss\";\r\nimport ProviderPreference from \"../utility/ProviderPreference.jsx\";\r\n\r\nimport request from \"../../util/request.js\";\r\nimport session from \"../../util/session.js\";\r\n\r\nconst PAGINATION_VISIBLE_COUNT = 6;\r\nconst PAGINATION_PROVIDERS_PER_PAGE = 6;\r\n\r\nclass PageSetup extends Component {\r\n  state = {\r\n    provider: {\r\n      count: 0,\r\n      list: []\r\n    },\r\n    query: \"\",       // chanes when pressing search\r\n    searchQuery: \"\", // changes with key presses\r\n    pagination: {\r\n      index: 1,\r\n      count: 0\r\n    },\r\n    sessionInterval: null,\r\n    redirectComponent: null\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.updateProviderCount();\r\n\r\n    if(session.isReady()) {\r\n      this.setState();\r\n    } else {\r\n      this.state.sessionInterval = setInterval(() => {\r\n        if(session.isReady()) {\r\n          clearInterval(this.state.sessionInterval);\r\n          this.setState();\r\n        }\r\n      }, 10);\r\n    }\r\n\r\n    this.shouldRedirect();\r\n  }\r\n\r\n  updateProviders = () => {\r\n    request.get(this.state.searchQuery.length > 0 ? request.routes.API_PROVIDER_SEARCH : request.routes.API_PROVIDER_GET_INTERVAL, {\r\n      skip: PAGINATION_PROVIDERS_PER_PAGE * (this.state.pagination.index - 1),\r\n      count: Math.min(PAGINATION_PROVIDERS_PER_PAGE, this.state.provider.count - PAGINATION_PROVIDERS_PER_PAGE * (this.state.pagination.index - 1)),\r\n      query: this.state.query\r\n    }).then((res) => {\r\n      console.log(res.data);\r\n        this.setState({\r\n          provider: {\r\n            ...this.state.provider,\r\n            list: res.data\r\n          }\r\n        })\r\n        this.updateProviderChecked();\r\n      }).catch((err) => {\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  updateProviderCount = () => {\r\n    request.get(this.state.searchQuery.length > 0 ? request.routes.API_PROVIDER_SEARCH_COUNT : request.routes.API_PROVIDER_COUNT, {\r\n      query: this.state.query\r\n    }).then((res) => {\r\n        let providerCount = res.data.count;\r\n\r\n        this.setState({\r\n          provider: {\r\n            ...this.state.provider,\r\n            count: providerCount\r\n          },\r\n          pagination: {\r\n            ...this.state.pagination,\r\n            count: (Math.ceil(providerCount / PAGINATION_PROVIDERS_PER_PAGE))\r\n          }\r\n        });\r\n\r\n        this.updateProviders();\r\n      }).catch((err) => {\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  updateProviderChecked = () => {\r\n    this.state.provider.list.map((provider, index) => {\r\n      request.get(request.routes.API_PREFERENCES_GET, {\r\n        uid: session.get().userId,\r\n        prov_id: provider.id\r\n      }).then((res) => {\r\n          let checked = (res.data.toString().trim().toLowerCase() === \"true\");\r\n          \r\n          this.state.provider.list[index].checked = checked;\r\n          this.setState();\r\n          this.forceUpdate();\r\n        }).catch((err) => {\r\n          console.error(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  handlePaginationFactory = (i) => {\r\n    return (event) => {\r\n        if(i >= 1 && i <= this.state.pagination.count) {\r\n          this.setState({\r\n            pagination: {\r\n              ...this.state.pagination,\r\n              index: i\r\n            }\r\n          }, this.updateProviders)\r\n        }\r\n    };\r\n  }\r\n\r\n  handleSearchKeyPress = (event) => {\r\n    if(event.key === \"Enter\") {\r\n      this.handleSearch();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleSearchChange = (event) => {\r\n    this.setState({ searchQuery: event.target.value });\r\n  }\r\n\r\n  handleSearch = () => {\r\n    this.setState({\r\n      query: this.state.searchQuery\r\n    }, () => {\r\n      this.updateProviderCount();\r\n\r\n      console.log(`Search: ${this.state.query}`);\r\n\r\n      this.updateProviderCount();\r\n    })\r\n  }\r\n\r\n  handleSaveSettings = () => {\r\n    this.state.provider.list.map((provider, index) => {\r\n      request.put2(request.routes.API_PREFERENCES_UPDATE, {\r\n        uid: session.get().userId,\r\n        prov_id: provider.id,\r\n        status: provider.checked ? true : false\r\n      }).then((res) => {\r\n          console.log(res);\r\n        }).catch((err) => {\r\n          console.error(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  shouldRedirect = () => {\r\n    request.get(request.routes.API_PREFERENCES_GET_SUBSCRIBED_PROVIDERS, {\r\n      uid: session.get().userId,\r\n      skip: 0,\r\n      count: 100\r\n    }).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({redirectComponent: res.data.length > 0 ? <Redirect to=\"/feed\" /> : \"\"});\r\n      }).catch((err) => {\r\n        console.error(err);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.redirectComponent}\r\n        <div className=\"tab-custom-container\">\r\n          <div className=\"setup-title\">\r\n            Looks like you're not subscribed to any news provider<br/>Select some, and you'll see news from them in your feed\r\n          </div>\r\n          <div id=\"preferences-setup-container\">\r\n            <Form id=\"preferences-setup-search\">\r\n              <Form.Control type=\"text\" placeholder=\"Search...\" onChange={this.handleSearchChange} onKeyPress={this.handleSearchKeyPress} />\r\n              <Button id=\"preferences-setup-search-button\" variant=\"primary\" onClick={this.handleSearch}>\r\n                Search\r\n              </Button>\r\n            </Form>\r\n            {\r\n              this.state.provider.list.length > 0 ?\r\n                this.state.provider.list.map((provider, index) => {\r\n                  return <ProviderPreference {...provider} onChange={() => {\r\n                      this.state.provider.list[index].checked = !this.state.provider.list[index].checked;\r\n\r\n                      this.setState();\r\n                      this.forceUpdate();\r\n                  }} checked={provider.checked ? true : false} />\r\n                }) :\r\n                <div id=\"setup-preferences-loading\">Loading...</div>\r\n            }\r\n            <Pagination id=\"setup-preferences-pagination\">\r\n              <Pagination.First onClick={this.handlePaginationFactory(1)} />\r\n              <Pagination.Prev onClick={this.handlePaginationFactory(this.state.pagination.index - 1)} />\r\n\r\n              {\r\n                this.state.pagination.index > PAGINATION_VISIBLE_COUNT ?\r\n                <React.Fragment>\r\n                  <Pagination.Item onClick={this.handlePaginationFactory(1)}>{1}</Pagination.Item>\r\n                  <Pagination.Ellipsis disabled/>\r\n                </React.Fragment> :\r\n                  \"\"\r\n              }\r\n\r\n              {\r\n                (() => {\r\n                  let list = [];\r\n\r\n                  for(let i = this.state.pagination.index - 1; i >= 1 && i >= this.state.pagination.index - ((PAGINATION_VISIBLE_COUNT - 1) / 2); --i) {\r\n                    list.push(<Pagination.Item onClick={this.handlePaginationFactory(i)}>{i}</Pagination.Item>);\r\n                  }\r\n\r\n                  return list;\r\n                })()\r\n              }\r\n\r\n              {\r\n                <Pagination.Item active onClick={this.handlePaginationFactory(this.state.pagination.index)}>{this.state.pagination.index}</Pagination.Item>\r\n              }\r\n\r\n              {\r\n                (() => {\r\n                  let list = [];\r\n\r\n                  for(let i = this.state.pagination.index + 1; i <= this.state.pagination.count && i <= this.state.pagination.index + ((PAGINATION_VISIBLE_COUNT - 1) / 2); ++i) {\r\n                    list.push(<Pagination.Item onClick={this.handlePaginationFactory(i)}>{i}</Pagination.Item>);\r\n                  }\r\n\r\n                  return list;\r\n                })()\r\n              }\r\n\r\n              {\r\n                Math.max(this.state.pagination.index + 1, 3) < this.state.pagination.count ?\r\n                  <React.Fragment>\r\n                    <Pagination.Ellipsis disabled/>\r\n                    <Pagination.Item onClick={this.handlePaginationFactory(this.state.pagination.count)}>{this.state.pagination.count}</Pagination.Item>\r\n                  </React.Fragment> :\r\n                  \"\"\r\n              }\r\n\r\n              <Pagination.Next onClick={this.handlePaginationFactory(this.state.pagination.index + 1)} />\r\n              <Pagination.Last onClick={this.handlePaginationFactory(this.state.pagination.count)} />\r\n            </Pagination>\r\n            <LinkContainer to=\"/feed\">\r\n              <Button id=\"setup-save-btn\" onClick={this.handleSaveSettings}>\r\n                Save setup\r\n              </Button>\r\n            </LinkContainer>\r\n          </div>\r\n        </div>\r\n        <CommonFooter fixed />\r\n        <br/><br/><br/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageSetup;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction RedirectIfNeeded() {\r\n  const { isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated ? \"\" : <Redirect to=\"/\" />\r\n  );\r\n}\r\n\r\nexport default RedirectIfNeeded;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport PageLanding from \"./pages/PageLanding\";\r\nimport PageFeed from \"./pages/PageFeed\";\r\nimport PageProfile from \"./pages/PageProfile\";\r\nimport PageProfileProvider from \"./pages/PageProfileProvider\";\r\nimport PageSettings from \"./pages/PageSettings\";\r\nimport PageFAQ from \"./pages/PageFAQ\";\r\nimport PageSetup from \"./pages/PageSetup\";\r\nimport RedirectIfNeeded from \"./utility/RedirectIfNeeded\";\r\n\r\nimport session from \"../util/session.js\";\r\n\r\nclass App extends Component {\r\n  state = { /*dummy: false*/ };\r\n  constructor() {\r\n    super();\r\n    session.init();\r\n    /*Session.getFromCookies();\r\n    Session.onUpdate = this.handleSessionUpdate;*/\r\n\r\n  }\r\n\r\n  /*handleSessionUpdate = () => {\r\n    this.setState({ dummy: !this.state.dummy });\r\n  };*/\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={PageLanding} />\r\n        </Switch>\r\n          <RedirectIfNeeded></RedirectIfNeeded>\r\n        <Switch>\r\n          <Route exact path=\"/feed\" component={PageFeed} />\r\n\r\n          <Route exact path=\"/profile\" component={PageProfile} />\r\n\r\n          <Route exact path=\"/settings\" component={PageSettings} />\r\n\r\n          <Route exact path=\"/faq\" component={PageFAQ} />\r\n\r\n          <Route exact path=\"/setup\" component={PageSetup} />\r\n\r\n          <Route exact path=\"/:providerId\" component={PageProfileProvider} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/style.scss';\r\nimport App from './components/App';\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Auth0Provider\r\n      domain=\"gmatei.eu.auth0.com\"\r\n      clientId=\"OzQArkLiVElk6NOvIthKWFmQmeyxZZBI\"\r\n      redirectUri={window.location.origin}\r\n      audience=\"https://gmatei.eu.auth0.com/api/v2/\"\r\n      scope=\"read:messages\"\r\n    >\r\n    <App />\r\n    </Auth0Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}